// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: calculator.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for Objective
type Objective int32

const (
	Objective_OBJECTIVE_UNSPECIFIED Objective = 0 // Default value for unspecified objective
	Objective_MAINTENANCE           Objective = 1 // "Maintenance"
	Objective_BULKING               Objective = 2 // "Bulking"
	Objective_CUTTING               Objective = 3 // "Cutting"
)

// Enum value maps for Objective.
var (
	Objective_name = map[int32]string{
		0: "OBJECTIVE_UNSPECIFIED",
		1: "MAINTENANCE",
		2: "BULKING",
		3: "CUTTING",
	}
	Objective_value = map[string]int32{
		"OBJECTIVE_UNSPECIFIED": 0,
		"MAINTENANCE":           1,
		"BULKING":               2,
		"CUTTING":               3,
	}
)

func (x Objective) Enum() *Objective {
	p := new(Objective)
	*p = x
	return p
}

func (x Objective) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Objective) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_proto_enumTypes[0].Descriptor()
}

func (Objective) Type() protoreflect.EnumType {
	return &file_calculator_proto_enumTypes[0]
}

func (x Objective) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Objective.Descriptor instead.
func (Objective) EnumDescriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{0}
}

// Enum for Activity
type Activity int32

const (
	Activity_ACTIVITY_UNSPECIFIED Activity = 0 // Default value for unspecified activity
	Activity_SEDENTARY            Activity = 1 // "Sedentary"
	Activity_LIGHT                Activity = 2 // "LightActivity"
	Activity_MODERATE             Activity = 3 // "Moderate"
	Activity_HEAVY                Activity = 4 // "Heavy"
	Activity_EXTRA_HEAVY          Activity = 5 // "ExtraHeavy"
)

// Enum value maps for Activity.
var (
	Activity_name = map[int32]string{
		0: "ACTIVITY_UNSPECIFIED",
		1: "SEDENTARY",
		2: "LIGHT",
		3: "MODERATE",
		4: "HEAVY",
		5: "EXTRA_HEAVY",
	}
	Activity_value = map[string]int32{
		"ACTIVITY_UNSPECIFIED": 0,
		"SEDENTARY":            1,
		"LIGHT":                2,
		"MODERATE":             3,
		"HEAVY":                4,
		"EXTRA_HEAVY":          5,
	}
)

func (x Activity) Enum() *Activity {
	p := new(Activity)
	*p = x
	return p
}

func (x Activity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Activity) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_proto_enumTypes[1].Descriptor()
}

func (Activity) Type() protoreflect.EnumType {
	return &file_calculator_proto_enumTypes[1]
}

func (x Activity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Activity.Descriptor instead.
func (Activity) EnumDescriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{1}
}

// Enum for System
type System int32

const (
	System_SYSTEM_UNSPECIFIED System = 0 // Default value for unspecified system
	System_METRIC             System = 1 // "Metric"
	System_IMPERIAL           System = 2 // "Imperial"
)

// Enum value maps for System.
var (
	System_name = map[int32]string{
		0: "SYSTEM_UNSPECIFIED",
		1: "METRIC",
		2: "IMPERIAL",
	}
	System_value = map[string]int32{
		"SYSTEM_UNSPECIFIED": 0,
		"METRIC":             1,
		"IMPERIAL":           2,
	}
)

func (x System) Enum() *System {
	p := new(System)
	*p = x
	return p
}

func (x System) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_proto_enumTypes[2].Descriptor()
}

func (System) Type() protoreflect.EnumType {
	return &file_calculator_proto_enumTypes[2]
}

func (x System) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System.Descriptor instead.
func (System) EnumDescriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{2}
}

// Enum for Gender
type Gender int32

const (
	Gender_GENDER_UNSPECIFIED Gender = 0 // Default value for unspecified gender
	Gender_MALE               Gender = 1 // "Male"
	Gender_FEMALE             Gender = 2 // "Female"
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GENDER_UNSPECIFIED",
		1: "MALE",
		2: "FEMALE",
	}
	Gender_value = map[string]int32{
		"GENDER_UNSPECIFIED": 0,
		"MALE":               1,
		"FEMALE":             2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_proto_enumTypes[3].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_calculator_proto_enumTypes[3]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{3}
}

type CaloriesDistribution int32

const (
	CaloriesDistribution_CD_UNSPECIFIED   CaloriesDistribution = 0
	CaloriesDistribution_HIGH_CALORIE     CaloriesDistribution = 1
	CaloriesDistribution_MODERATE_CALORIE CaloriesDistribution = 2
	CaloriesDistribution_LOW_CALORIE      CaloriesDistribution = 3
)

// Enum value maps for CaloriesDistribution.
var (
	CaloriesDistribution_name = map[int32]string{
		0: "CD_UNSPECIFIED",
		1: "HIGH_CALORIE",
		2: "MODERATE_CALORIE",
		3: "LOW_CALORIE",
	}
	CaloriesDistribution_value = map[string]int32{
		"CD_UNSPECIFIED":   0,
		"HIGH_CALORIE":     1,
		"MODERATE_CALORIE": 2,
		"LOW_CALORIE":      3,
	}
)

func (x CaloriesDistribution) Enum() *CaloriesDistribution {
	p := new(CaloriesDistribution)
	*p = x
	return p
}

func (x CaloriesDistribution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaloriesDistribution) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_proto_enumTypes[4].Descriptor()
}

func (CaloriesDistribution) Type() protoreflect.EnumType {
	return &file_calculator_proto_enumTypes[4]
}

func (x CaloriesDistribution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaloriesDistribution.Descriptor instead.
func (CaloriesDistribution) EnumDescriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{4}
}

type SetActiveUserMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MacroId string `protobuf:"bytes,2,opt,name=macro_id,json=macroId,proto3" json:"macro_id,omitempty"`
}

func (x *SetActiveUserMacroRequest) Reset() {
	*x = SetActiveUserMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActiveUserMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActiveUserMacroRequest) ProtoMessage() {}

func (x *SetActiveUserMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActiveUserMacroRequest.ProtoReflect.Descriptor instead.
func (*SetActiveUserMacroRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{0}
}

func (x *SetActiveUserMacroRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SetActiveUserMacroRequest) GetMacroId() string {
	if x != nil {
		return x.MacroId
	}
	return ""
}

type SetActiveUserMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMacro *UserMacroDistribution `protobuf:"bytes,1,opt,name=current_macro,json=currentMacro,proto3" json:"current_macro,omitempty"`
}

func (x *SetActiveUserMacroResponse) Reset() {
	*x = SetActiveUserMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActiveUserMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActiveUserMacroResponse) ProtoMessage() {}

func (x *SetActiveUserMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActiveUserMacroResponse.ProtoReflect.Descriptor instead.
func (*SetActiveUserMacroResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{1}
}

func (x *SetActiveUserMacroResponse) GetCurrentMacro() *UserMacroDistribution {
	if x != nil {
		return x.CurrentMacro
	}
	return nil
}

type UserMacroDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Age                             uint32                 `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Height                          uint32                 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Weight                          float64                `protobuf:"fixed64,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Gender                          Gender                 `protobuf:"varint,6,opt,name=gender,proto3,enum=fitSphere.calculator.Gender" json:"gender,omitempty"`
	System                          System                 `protobuf:"varint,7,opt,name=system,proto3,enum=fitSphere.calculator.System" json:"system,omitempty"`
	Activity                        Activity               `protobuf:"varint,8,opt,name=activity,proto3,enum=fitSphere.calculator.Activity" json:"activity,omitempty"`
	ActivityDescription             string                 `protobuf:"bytes,9,opt,name=activity_description,json=activityDescription,proto3" json:"activity_description,omitempty"`
	Objective                       Objective              `protobuf:"varint,10,opt,name=objective,proto3,enum=fitSphere.calculator.Objective" json:"objective,omitempty"`
	ObjectiveDescription            string                 `protobuf:"bytes,11,opt,name=objective_description,json=objectiveDescription,proto3" json:"objective_description,omitempty"`
	CaloriesDistribution            CaloriesDistribution   `protobuf:"varint,12,opt,name=calories_distribution,json=caloriesDistribution,proto3,enum=fitSphere.calculator.CaloriesDistribution" json:"calories_distribution,omitempty"`
	CaloriesDistributionDescription string                 `protobuf:"bytes,13,opt,name=calories_distribution_description,json=caloriesDistributionDescription,proto3" json:"calories_distribution_description,omitempty"`
	Protein                         uint32                 `protobuf:"varint,14,opt,name=protein,proto3" json:"protein,omitempty"`
	Fats                            uint32                 `protobuf:"varint,15,opt,name=fats,proto3" json:"fats,omitempty"`
	Carbs                           uint32                 `protobuf:"varint,16,opt,name=carbs,proto3" json:"carbs,omitempty"`
	Bmr                             uint32                 `protobuf:"varint,17,opt,name=bmr,proto3" json:"bmr,omitempty"`
	Tdee                            uint32                 `protobuf:"varint,18,opt,name=tdee,proto3" json:"tdee,omitempty"`
	Goal                            uint32                 `protobuf:"varint,19,opt,name=goal,proto3" json:"goal,omitempty"`
	CreatedAt                       *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Use Timestamp instead of string
}

func (x *UserMacroDistribution) Reset() {
	*x = UserMacroDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMacroDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMacroDistribution) ProtoMessage() {}

func (x *UserMacroDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMacroDistribution.ProtoReflect.Descriptor instead.
func (*UserMacroDistribution) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{2}
}

func (x *UserMacroDistribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserMacroDistribution) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserMacroDistribution) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserMacroDistribution) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UserMacroDistribution) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UserMacroDistribution) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_GENDER_UNSPECIFIED
}

func (x *UserMacroDistribution) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_SYSTEM_UNSPECIFIED
}

func (x *UserMacroDistribution) GetActivity() Activity {
	if x != nil {
		return x.Activity
	}
	return Activity_ACTIVITY_UNSPECIFIED
}

func (x *UserMacroDistribution) GetActivityDescription() string {
	if x != nil {
		return x.ActivityDescription
	}
	return ""
}

func (x *UserMacroDistribution) GetObjective() Objective {
	if x != nil {
		return x.Objective
	}
	return Objective_OBJECTIVE_UNSPECIFIED
}

func (x *UserMacroDistribution) GetObjectiveDescription() string {
	if x != nil {
		return x.ObjectiveDescription
	}
	return ""
}

func (x *UserMacroDistribution) GetCaloriesDistribution() CaloriesDistribution {
	if x != nil {
		return x.CaloriesDistribution
	}
	return CaloriesDistribution_CD_UNSPECIFIED
}

func (x *UserMacroDistribution) GetCaloriesDistributionDescription() string {
	if x != nil {
		return x.CaloriesDistributionDescription
	}
	return ""
}

func (x *UserMacroDistribution) GetProtein() uint32 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *UserMacroDistribution) GetFats() uint32 {
	if x != nil {
		return x.Fats
	}
	return 0
}

func (x *UserMacroDistribution) GetCarbs() uint32 {
	if x != nil {
		return x.Carbs
	}
	return 0
}

func (x *UserMacroDistribution) GetBmr() uint32 {
	if x != nil {
		return x.Bmr
	}
	return 0
}

func (x *UserMacroDistribution) GetTdee() uint32 {
	if x != nil {
		return x.Tdee
	}
	return 0
}

func (x *UserMacroDistribution) GetGoal() uint32 {
	if x != nil {
		return x.Goal
	}
	return 0
}

func (x *UserMacroDistribution) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Request and response messages for the Create operation
type CreateUserMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *UserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
	IsCurrent bool                   `protobuf:"varint,2,opt,name=is_current,json=isCurrent,proto3" json:"is_current,omitempty"`
}

func (x *CreateUserMacroRequest) Reset() {
	*x = CreateUserMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserMacroRequest) ProtoMessage() {}

func (x *CreateUserMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserMacroRequest.ProtoReflect.Descriptor instead.
func (*CreateUserMacroRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserMacroRequest) GetUserMacro() *UserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

func (x *CreateUserMacroRequest) GetIsCurrent() bool {
	if x != nil {
		return x.IsCurrent
	}
	return false
}

type CreateUserMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *UserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
}

func (x *CreateUserMacroResponse) Reset() {
	*x = CreateUserMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserMacroResponse) ProtoMessage() {}

func (x *CreateUserMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserMacroResponse.ProtoReflect.Descriptor instead.
func (*CreateUserMacroResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserMacroResponse) GetUserMacro() *UserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

// Offline service
type CreateOfflineUserMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *OfflineUserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
}

func (x *CreateOfflineUserMacroRequest) Reset() {
	*x = CreateOfflineUserMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfflineUserMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfflineUserMacroRequest) ProtoMessage() {}

func (x *CreateOfflineUserMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfflineUserMacroRequest.ProtoReflect.Descriptor instead.
func (*CreateOfflineUserMacroRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOfflineUserMacroRequest) GetUserMacro() *OfflineUserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

type CreateOfflineUserMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *OfflineUserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
}

func (x *CreateOfflineUserMacroResponse) Reset() {
	*x = CreateOfflineUserMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfflineUserMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfflineUserMacroResponse) ProtoMessage() {}

func (x *CreateOfflineUserMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfflineUserMacroResponse.ProtoReflect.Descriptor instead.
func (*CreateOfflineUserMacroResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOfflineUserMacroResponse) GetUserMacro() *OfflineUserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

// Request and response messages for the GetAll operation
type GetAllUserMacrosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetAllUserMacrosRequest) Reset() {
	*x = GetAllUserMacrosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserMacrosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserMacrosRequest) ProtoMessage() {}

func (x *GetAllUserMacrosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserMacrosRequest.ProtoReflect.Descriptor instead.
func (*GetAllUserMacrosRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllUserMacrosRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAllUserMacrosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacros []*UserMacroDistribution `protobuf:"bytes,1,rep,name=user_macros,json=userMacros,proto3" json:"user_macros,omitempty"`
}

func (x *GetAllUserMacrosResponse) Reset() {
	*x = GetAllUserMacrosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserMacrosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserMacrosResponse) ProtoMessage() {}

func (x *GetAllUserMacrosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserMacrosResponse.ProtoReflect.Descriptor instead.
func (*GetAllUserMacrosResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllUserMacrosResponse) GetUserMacros() []*UserMacroDistribution {
	if x != nil {
		return x.UserMacros
	}
	return nil
}

// Request and response messages for the Get operation
type GetUserMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *GetUserMacroRequest) Reset() {
	*x = GetUserMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMacroRequest) ProtoMessage() {}

func (x *GetUserMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMacroRequest.ProtoReflect.Descriptor instead.
func (*GetUserMacroRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserMacroRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type GetUserMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *UserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
}

func (x *GetUserMacroResponse) Reset() {
	*x = GetUserMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMacroResponse) ProtoMessage() {}

func (x *GetUserMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMacroResponse.ProtoReflect.Descriptor instead.
func (*GetUserMacroResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserMacroResponse) GetUserMacro() *UserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

type OfflineUserMacroDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age                             uint32               `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	Height                          uint32               `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Weight                          uint32               `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Gender                          string               `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	System                          string               `protobuf:"bytes,5,opt,name=system,proto3" json:"system,omitempty"`
	Activity                        string               `protobuf:"bytes,6,opt,name=activity,proto3" json:"activity,omitempty"`
	ActivityDescription             string               `protobuf:"bytes,7,opt,name=activity_description,json=activityDescription,proto3" json:"activity_description,omitempty"`
	Objective                       string               `protobuf:"bytes,8,opt,name=objective,proto3" json:"objective,omitempty"`
	ObjectiveDescription            string               `protobuf:"bytes,9,opt,name=objective_description,json=objectiveDescription,proto3" json:"objective_description,omitempty"`
	CaloriesDistribution            CaloriesDistribution `protobuf:"varint,10,opt,name=calories_distribution,json=caloriesDistribution,proto3,enum=fitSphere.calculator.CaloriesDistribution" json:"calories_distribution,omitempty"`
	CaloriesDistributionDescription string               `protobuf:"bytes,11,opt,name=calories_distribution_description,json=caloriesDistributionDescription,proto3" json:"calories_distribution_description,omitempty"`
	Protein                         uint32               `protobuf:"varint,12,opt,name=protein,proto3" json:"protein,omitempty"`
	Fats                            uint32               `protobuf:"varint,13,opt,name=fats,proto3" json:"fats,omitempty"`
	Carbs                           uint32               `protobuf:"varint,14,opt,name=carbs,proto3" json:"carbs,omitempty"`
	Bmr                             uint32               `protobuf:"varint,15,opt,name=bmr,proto3" json:"bmr,omitempty"`
	Tdee                            uint32               `protobuf:"varint,16,opt,name=tdee,proto3" json:"tdee,omitempty"`
	Goal                            uint32               `protobuf:"varint,17,opt,name=goal,proto3" json:"goal,omitempty"`
	CreatedAt                       string               `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *OfflineUserMacroDistribution) Reset() {
	*x = OfflineUserMacroDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineUserMacroDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineUserMacroDistribution) ProtoMessage() {}

func (x *OfflineUserMacroDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineUserMacroDistribution.ProtoReflect.Descriptor instead.
func (*OfflineUserMacroDistribution) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{11}
}

func (x *OfflineUserMacroDistribution) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetActivity() string {
	if x != nil {
		return x.Activity
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetActivityDescription() string {
	if x != nil {
		return x.ActivityDescription
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetObjective() string {
	if x != nil {
		return x.Objective
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetObjectiveDescription() string {
	if x != nil {
		return x.ObjectiveDescription
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetCaloriesDistribution() CaloriesDistribution {
	if x != nil {
		return x.CaloriesDistribution
	}
	return CaloriesDistribution_CD_UNSPECIFIED
}

func (x *OfflineUserMacroDistribution) GetCaloriesDistributionDescription() string {
	if x != nil {
		return x.CaloriesDistributionDescription
	}
	return ""
}

func (x *OfflineUserMacroDistribution) GetProtein() uint32 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetFats() uint32 {
	if x != nil {
		return x.Fats
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetCarbs() uint32 {
	if x != nil {
		return x.Carbs
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetBmr() uint32 {
	if x != nil {
		return x.Bmr
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetTdee() uint32 {
	if x != nil {
		return x.Tdee
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetGoal() uint32 {
	if x != nil {
		return x.Goal
	}
	return 0
}

func (x *OfflineUserMacroDistribution) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type CreateOfflineMacroDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMacro *OfflineUserMacroDistribution `protobuf:"bytes,1,opt,name=user_macro,json=userMacro,proto3" json:"user_macro,omitempty"`
}

func (x *CreateOfflineMacroDistribution) Reset() {
	*x = CreateOfflineMacroDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfflineMacroDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfflineMacroDistribution) ProtoMessage() {}

func (x *CreateOfflineMacroDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfflineMacroDistribution.ProtoReflect.Descriptor instead.
func (*CreateOfflineMacroDistribution) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{12}
}

func (x *CreateOfflineMacroDistribution) GetUserMacro() *OfflineUserMacroDistribution {
	if x != nil {
		return x.UserMacro
	}
	return nil
}

type DeleteUserMacroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacroId string `protobuf:"bytes,1,opt,name=macro_id,json=macroId,proto3" json:"macro_id,omitempty"`
}

func (x *DeleteUserMacroRequest) Reset() {
	*x = DeleteUserMacroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserMacroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserMacroRequest) ProtoMessage() {}

func (x *DeleteUserMacroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserMacroRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserMacroRequest) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteUserMacroRequest) GetMacroId() string {
	if x != nil {
		return x.MacroId
	}
	return ""
}

type DeleteUserMacroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserMacroResponse) Reset() {
	*x = DeleteUserMacroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserMacroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserMacroResponse) ProtoMessage() {}

func (x *DeleteUserMacroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserMacroResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserMacroResponse) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{14}
}

type NilRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NilRes) Reset() {
	*x = NilRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRes) ProtoMessage() {}

func (x *NilRes) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRes.ProtoReflect.Descriptor instead.
func (*NilRes) Descriptor() ([]byte, []int) {
	return file_calculator_proto_rawDescGZIP(), []int{15}
}

var File_calculator_proto protoreflect.FileDescriptor

var file_calculator_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x1a, 0x53, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x22, 0xb7, 0x06, 0x0a, 0x15, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f,
	0x0a, 0x15, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x61, 0x6c, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x21, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x63, 0x61, 0x6c, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x74, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x62, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x72, 0x62, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x6d, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x62, 0x6d,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x64, 0x65, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x64, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x74, 0x53,
	0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x22, 0x72, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x22, 0x73, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69,
	0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x68,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x22, 0xfc, 0x04, 0x0a,
	0x1c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x14, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x15,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5f, 0x0a, 0x15, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x61,
	0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x21, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x63,
	0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x74, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x62, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x6d, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x62, 0x6d, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x64, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x64, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x73, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x22, 0x33, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x08, 0x0a, 0x06, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x2a, 0x51, 0x0a, 0x09, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x55, 0x4c, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a, 0x68, 0x0a,
	0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x41, 0x52, 0x59,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x48,
	0x45, 0x41, 0x56, 0x59, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f,
	0x48, 0x45, 0x41, 0x56, 0x59, 0x10, 0x05, 0x2a, 0x3a, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x54,
	0x52, 0x49, 0x43, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4d, 0x50, 0x45, 0x52, 0x49, 0x41,
	0x4c, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x12, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x14, 0x43,
	0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x49, 0x47, 0x48, 0x5f,
	0x43, 0x41, 0x4c, 0x4f, 0x52, 0x49, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44,
	0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4c, 0x4f, 0x52, 0x49, 0x45, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x41, 0x4c, 0x4f, 0x52, 0x49, 0x45, 0x10, 0x03,
	0x32, 0xc4, 0x05, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x6e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x12, 0x2c, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x73, 0x12, 0x2d, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x73, 0x12, 0x29, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x12, 0x33, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72,
	0x6f, 0x12, 0x2c, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x63, 0x72, 0x6f, 0x12, 0x2f, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculator_proto_rawDescOnce sync.Once
	file_calculator_proto_rawDescData = file_calculator_proto_rawDesc
)

func file_calculator_proto_rawDescGZIP() []byte {
	file_calculator_proto_rawDescOnce.Do(func() {
		file_calculator_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculator_proto_rawDescData)
	})
	return file_calculator_proto_rawDescData
}

var file_calculator_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_calculator_proto_goTypes = []any{
	(Objective)(0),                         // 0: fitSphere.calculator.Objective
	(Activity)(0),                          // 1: fitSphere.calculator.Activity
	(System)(0),                            // 2: fitSphere.calculator.System
	(Gender)(0),                            // 3: fitSphere.calculator.Gender
	(CaloriesDistribution)(0),              // 4: fitSphere.calculator.CaloriesDistribution
	(*SetActiveUserMacroRequest)(nil),      // 5: fitSphere.calculator.SetActiveUserMacroRequest
	(*SetActiveUserMacroResponse)(nil),     // 6: fitSphere.calculator.SetActiveUserMacroResponse
	(*UserMacroDistribution)(nil),          // 7: fitSphere.calculator.UserMacroDistribution
	(*CreateUserMacroRequest)(nil),         // 8: fitSphere.calculator.CreateUserMacroRequest
	(*CreateUserMacroResponse)(nil),        // 9: fitSphere.calculator.CreateUserMacroResponse
	(*CreateOfflineUserMacroRequest)(nil),  // 10: fitSphere.calculator.CreateOfflineUserMacroRequest
	(*CreateOfflineUserMacroResponse)(nil), // 11: fitSphere.calculator.CreateOfflineUserMacroResponse
	(*GetAllUserMacrosRequest)(nil),        // 12: fitSphere.calculator.GetAllUserMacrosRequest
	(*GetAllUserMacrosResponse)(nil),       // 13: fitSphere.calculator.GetAllUserMacrosResponse
	(*GetUserMacroRequest)(nil),            // 14: fitSphere.calculator.GetUserMacroRequest
	(*GetUserMacroResponse)(nil),           // 15: fitSphere.calculator.GetUserMacroResponse
	(*OfflineUserMacroDistribution)(nil),   // 16: fitSphere.calculator.OfflineUserMacroDistribution
	(*CreateOfflineMacroDistribution)(nil), // 17: fitSphere.calculator.CreateOfflineMacroDistribution
	(*DeleteUserMacroRequest)(nil),         // 18: fitSphere.calculator.DeleteUserMacroRequest
	(*DeleteUserMacroResponse)(nil),        // 19: fitSphere.calculator.DeleteUserMacroResponse
	(*NilRes)(nil),                         // 20: fitSphere.calculator.NilRes
	(*timestamppb.Timestamp)(nil),          // 21: google.protobuf.Timestamp
}
var file_calculator_proto_depIdxs = []int32{
	7,  // 0: fitSphere.calculator.SetActiveUserMacroResponse.current_macro:type_name -> fitSphere.calculator.UserMacroDistribution
	3,  // 1: fitSphere.calculator.UserMacroDistribution.gender:type_name -> fitSphere.calculator.Gender
	2,  // 2: fitSphere.calculator.UserMacroDistribution.system:type_name -> fitSphere.calculator.System
	1,  // 3: fitSphere.calculator.UserMacroDistribution.activity:type_name -> fitSphere.calculator.Activity
	0,  // 4: fitSphere.calculator.UserMacroDistribution.objective:type_name -> fitSphere.calculator.Objective
	4,  // 5: fitSphere.calculator.UserMacroDistribution.calories_distribution:type_name -> fitSphere.calculator.CaloriesDistribution
	21, // 6: fitSphere.calculator.UserMacroDistribution.created_at:type_name -> google.protobuf.Timestamp
	7,  // 7: fitSphere.calculator.CreateUserMacroRequest.user_macro:type_name -> fitSphere.calculator.UserMacroDistribution
	7,  // 8: fitSphere.calculator.CreateUserMacroResponse.user_macro:type_name -> fitSphere.calculator.UserMacroDistribution
	16, // 9: fitSphere.calculator.CreateOfflineUserMacroRequest.user_macro:type_name -> fitSphere.calculator.OfflineUserMacroDistribution
	16, // 10: fitSphere.calculator.CreateOfflineUserMacroResponse.user_macro:type_name -> fitSphere.calculator.OfflineUserMacroDistribution
	7,  // 11: fitSphere.calculator.GetAllUserMacrosResponse.user_macros:type_name -> fitSphere.calculator.UserMacroDistribution
	7,  // 12: fitSphere.calculator.GetUserMacroResponse.user_macro:type_name -> fitSphere.calculator.UserMacroDistribution
	4,  // 13: fitSphere.calculator.OfflineUserMacroDistribution.calories_distribution:type_name -> fitSphere.calculator.CaloriesDistribution
	16, // 14: fitSphere.calculator.CreateOfflineMacroDistribution.user_macro:type_name -> fitSphere.calculator.OfflineUserMacroDistribution
	8,  // 15: fitSphere.calculator.Calculator.CreateUserMacro:input_type -> fitSphere.calculator.CreateUserMacroRequest
	12, // 16: fitSphere.calculator.Calculator.GetUsersMacros:input_type -> fitSphere.calculator.GetAllUserMacrosRequest
	14, // 17: fitSphere.calculator.Calculator.GetUserMacros:input_type -> fitSphere.calculator.GetUserMacroRequest
	10, // 18: fitSphere.calculator.Calculator.CreateOfflineUserMacro:input_type -> fitSphere.calculator.CreateOfflineUserMacroRequest
	18, // 19: fitSphere.calculator.Calculator.DeleteUserMacro:input_type -> fitSphere.calculator.DeleteUserMacroRequest
	5,  // 20: fitSphere.calculator.Calculator.SetActiveUserMacro:input_type -> fitSphere.calculator.SetActiveUserMacroRequest
	9,  // 21: fitSphere.calculator.Calculator.CreateUserMacro:output_type -> fitSphere.calculator.CreateUserMacroResponse
	13, // 22: fitSphere.calculator.Calculator.GetUsersMacros:output_type -> fitSphere.calculator.GetAllUserMacrosResponse
	15, // 23: fitSphere.calculator.Calculator.GetUserMacros:output_type -> fitSphere.calculator.GetUserMacroResponse
	11, // 24: fitSphere.calculator.Calculator.CreateOfflineUserMacro:output_type -> fitSphere.calculator.CreateOfflineUserMacroResponse
	19, // 25: fitSphere.calculator.Calculator.DeleteUserMacro:output_type -> fitSphere.calculator.DeleteUserMacroResponse
	6,  // 26: fitSphere.calculator.Calculator.SetActiveUserMacro:output_type -> fitSphere.calculator.SetActiveUserMacroResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_calculator_proto_init() }
func file_calculator_proto_init() {
	if File_calculator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calculator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SetActiveUserMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SetActiveUserMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UserMacroDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOfflineUserMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOfflineUserMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllUserMacrosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllUserMacrosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*OfflineUserMacroDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOfflineMacroDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserMacroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserMacroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*NilRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculator_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculator_proto_goTypes,
		DependencyIndexes: file_calculator_proto_depIdxs,
		EnumInfos:         file_calculator_proto_enumTypes,
		MessageInfos:      file_calculator_proto_msgTypes,
	}.Build()
	File_calculator_proto = out.File
	file_calculator_proto_rawDesc = nil
	file_calculator_proto_goTypes = nil
	file_calculator_proto_depIdxs = nil
}
