// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: measurement.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWeightReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Weight        *XWeight               `protobuf:"bytes,1,opt,name=weight,proto3" json:"weight,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWeightReq) Reset() {
	*x = CreateWeightReq{}
	mi := &file_measurement_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWeightReq) ProtoMessage() {}

func (x *CreateWeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWeightReq.ProtoReflect.Descriptor instead.
func (*CreateWeightReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWeightReq) GetWeight() *XWeight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *CreateWeightReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWeightReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateWeightRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Weight        *XWeight               `protobuf:"bytes,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWeightRes) Reset() {
	*x = CreateWeightRes{}
	mi := &file_measurement_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWeightRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWeightRes) ProtoMessage() {}

func (x *CreateWeightRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWeightRes.ProtoReflect.Descriptor instead.
func (*CreateWeightRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWeightRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWeightRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWeightRes) GetWeight() *XWeight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *CreateWeightRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWeightsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeightsReq) Reset() {
	*x = GetWeightsReq{}
	mi := &file_measurement_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeightsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeightsReq) ProtoMessage() {}

func (x *GetWeightsReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeightsReq.ProtoReflect.Descriptor instead.
func (*GetWeightsReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{2}
}

func (x *GetWeightsReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWeightsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Weight        []*XWeight             `protobuf:"bytes,3,rep,name=weight,proto3" json:"weight,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeightsRes) Reset() {
	*x = GetWeightsRes{}
	mi := &file_measurement_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeightsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeightsRes) ProtoMessage() {}

func (x *GetWeightsRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeightsRes.ProtoReflect.Descriptor instead.
func (*GetWeightsRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{3}
}

func (x *GetWeightsRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWeightsRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWeightsRes) GetWeight() []*XWeight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *GetWeightsRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWeightReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeightId      string                 `protobuf:"bytes,1,opt,name=weight_id,json=weightId,proto3" json:"weight_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeightReq) Reset() {
	*x = GetWeightReq{}
	mi := &file_measurement_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeightReq) ProtoMessage() {}

func (x *GetWeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeightReq.ProtoReflect.Descriptor instead.
func (*GetWeightReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{4}
}

func (x *GetWeightReq) GetWeightId() string {
	if x != nil {
		return x.WeightId
	}
	return ""
}

func (x *GetWeightReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWeightReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWeightRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeightId      string                 `protobuf:"bytes,1,opt,name=weight_id,json=weightId,proto3" json:"weight_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWeightRes) Reset() {
	*x = GetWeightRes{}
	mi := &file_measurement_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWeightRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeightRes) ProtoMessage() {}

func (x *GetWeightRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeightRes.ProtoReflect.Descriptor instead.
func (*GetWeightRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{5}
}

func (x *GetWeightRes) GetWeightId() string {
	if x != nil {
		return x.WeightId
	}
	return ""
}

func (x *GetWeightRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWeightRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteWeightReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeightId      string                 `protobuf:"bytes,1,opt,name=weight_id,json=weightId,proto3" json:"weight_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWeightReq) Reset() {
	*x = DeleteWeightReq{}
	mi := &file_measurement_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWeightReq) ProtoMessage() {}

func (x *DeleteWeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWeightReq.ProtoReflect.Descriptor instead.
func (*DeleteWeightReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteWeightReq) GetWeightId() string {
	if x != nil {
		return x.WeightId
	}
	return ""
}

func (x *DeleteWeightReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteWeightReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWeightReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeightId      string                 `protobuf:"bytes,1,opt,name=weight_id,json=weightId,proto3" json:"weight_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWeightReq) Reset() {
	*x = UpdateWeightReq{}
	mi := &file_measurement_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWeightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeightReq) ProtoMessage() {}

func (x *UpdateWeightReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeightReq.ProtoReflect.Descriptor instead.
func (*UpdateWeightReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateWeightReq) GetWeightId() string {
	if x != nil {
		return x.WeightId
	}
	return ""
}

func (x *UpdateWeightReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateWeightReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateWeightReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWeightRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Weight        *XWeight               `protobuf:"bytes,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWeightRes) Reset() {
	*x = UpdateWeightRes{}
	mi := &file_measurement_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWeightRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeightRes) ProtoMessage() {}

func (x *UpdateWeightRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeightRes.ProtoReflect.Descriptor instead.
func (*UpdateWeightRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWeightRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateWeightRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateWeightRes) GetWeight() *XWeight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *UpdateWeightRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateWaterIntakeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Water         *XWaterIntake          `protobuf:"bytes,1,opt,name=water,proto3" json:"water,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaterIntakeReq) Reset() {
	*x = CreateWaterIntakeReq{}
	mi := &file_measurement_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaterIntakeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaterIntakeReq) ProtoMessage() {}

func (x *CreateWaterIntakeReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaterIntakeReq.ProtoReflect.Descriptor instead.
func (*CreateWaterIntakeReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWaterIntakeReq) GetWater() *XWaterIntake {
	if x != nil {
		return x.Water
	}
	return nil
}

func (x *CreateWaterIntakeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWaterIntakeReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateWaterIntakeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Water         *XWaterIntake          `protobuf:"bytes,3,opt,name=water,proto3" json:"water,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaterIntakeRes) Reset() {
	*x = CreateWaterIntakeRes{}
	mi := &file_measurement_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaterIntakeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaterIntakeRes) ProtoMessage() {}

func (x *CreateWaterIntakeRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaterIntakeRes.ProtoReflect.Descriptor instead.
func (*CreateWaterIntakeRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{10}
}

func (x *CreateWaterIntakeRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWaterIntakeRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWaterIntakeRes) GetWater() *XWaterIntake {
	if x != nil {
		return x.Water
	}
	return nil
}

func (x *CreateWaterIntakeRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWaterIntakesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaterIntakesReq) Reset() {
	*x = GetWaterIntakesReq{}
	mi := &file_measurement_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaterIntakesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaterIntakesReq) ProtoMessage() {}

func (x *GetWaterIntakesReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaterIntakesReq.ProtoReflect.Descriptor instead.
func (*GetWaterIntakesReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{11}
}

func (x *GetWaterIntakesReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWaterIntakesRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Water         []*XWaterIntake        `protobuf:"bytes,3,rep,name=water,proto3" json:"water,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaterIntakesRes) Reset() {
	*x = GetWaterIntakesRes{}
	mi := &file_measurement_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaterIntakesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaterIntakesRes) ProtoMessage() {}

func (x *GetWaterIntakesRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaterIntakesRes.ProtoReflect.Descriptor instead.
func (*GetWaterIntakesRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{12}
}

func (x *GetWaterIntakesRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWaterIntakesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWaterIntakesRes) GetWater() []*XWaterIntake {
	if x != nil {
		return x.Water
	}
	return nil
}

func (x *GetWaterIntakesRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWaterIntakeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterIntakeId string                 `protobuf:"bytes,1,opt,name=water_intake_id,json=waterIntakeId,proto3" json:"water_intake_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaterIntakeReq) Reset() {
	*x = GetWaterIntakeReq{}
	mi := &file_measurement_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaterIntakeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaterIntakeReq) ProtoMessage() {}

func (x *GetWaterIntakeReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaterIntakeReq.ProtoReflect.Descriptor instead.
func (*GetWaterIntakeReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{13}
}

func (x *GetWaterIntakeReq) GetWaterIntakeId() string {
	if x != nil {
		return x.WaterIntakeId
	}
	return ""
}

func (x *GetWaterIntakeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWaterIntakeReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWaterIntakeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterIntakeId string                 `protobuf:"bytes,1,opt,name=water_intake_id,json=waterIntakeId,proto3" json:"water_intake_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaterIntakeRes) Reset() {
	*x = GetWaterIntakeRes{}
	mi := &file_measurement_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaterIntakeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaterIntakeRes) ProtoMessage() {}

func (x *GetWaterIntakeRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaterIntakeRes.ProtoReflect.Descriptor instead.
func (*GetWaterIntakeRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{14}
}

func (x *GetWaterIntakeRes) GetWaterIntakeId() string {
	if x != nil {
		return x.WaterIntakeId
	}
	return ""
}

func (x *GetWaterIntakeRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWaterIntakeRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteWaterIntakeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterIntakeId string                 `protobuf:"bytes,1,opt,name=water_intake_id,json=waterIntakeId,proto3" json:"water_intake_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWaterIntakeReq) Reset() {
	*x = DeleteWaterIntakeReq{}
	mi := &file_measurement_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWaterIntakeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWaterIntakeReq) ProtoMessage() {}

func (x *DeleteWaterIntakeReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWaterIntakeReq.ProtoReflect.Descriptor instead.
func (*DeleteWaterIntakeReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWaterIntakeReq) GetWaterIntakeId() string {
	if x != nil {
		return x.WaterIntakeId
	}
	return ""
}

func (x *DeleteWaterIntakeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteWaterIntakeReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWaterIntakeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterIntakeId string                 `protobuf:"bytes,1,opt,name=water_intake_id,json=waterIntakeId,proto3" json:"water_intake_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWaterIntakeReq) Reset() {
	*x = UpdateWaterIntakeReq{}
	mi := &file_measurement_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWaterIntakeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaterIntakeReq) ProtoMessage() {}

func (x *UpdateWaterIntakeReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaterIntakeReq.ProtoReflect.Descriptor instead.
func (*UpdateWaterIntakeReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateWaterIntakeReq) GetWaterIntakeId() string {
	if x != nil {
		return x.WaterIntakeId
	}
	return ""
}

func (x *UpdateWaterIntakeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateWaterIntakeReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateWaterIntakeReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWaterIntakeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Water         *XWaterIntake          `protobuf:"bytes,3,opt,name=water,proto3" json:"water,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWaterIntakeRes) Reset() {
	*x = UpdateWaterIntakeRes{}
	mi := &file_measurement_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWaterIntakeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaterIntakeRes) ProtoMessage() {}

func (x *UpdateWaterIntakeRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaterIntakeRes.ProtoReflect.Descriptor instead.
func (*UpdateWaterIntakeRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateWaterIntakeRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateWaterIntakeRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateWaterIntakeRes) GetWater() *XWaterIntake {
	if x != nil {
		return x.Water
	}
	return nil
}

func (x *UpdateWaterIntakeRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateWasteLineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLine     *XWasteLine            `protobuf:"bytes,1,opt,name=waste_line,json=wasteLine,proto3" json:"waste_line,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWasteLineReq) Reset() {
	*x = CreateWasteLineReq{}
	mi := &file_measurement_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWasteLineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWasteLineReq) ProtoMessage() {}

func (x *CreateWasteLineReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWasteLineReq.ProtoReflect.Descriptor instead.
func (*CreateWasteLineReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{18}
}

func (x *CreateWasteLineReq) GetWasteLine() *XWasteLine {
	if x != nil {
		return x.WasteLine
	}
	return nil
}

func (x *CreateWasteLineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWasteLineReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateWasteLineRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WasteLine     *XWasteLine            `protobuf:"bytes,3,opt,name=waste_line,json=wasteLine,proto3" json:"waste_line,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWasteLineRes) Reset() {
	*x = CreateWasteLineRes{}
	mi := &file_measurement_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWasteLineRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWasteLineRes) ProtoMessage() {}

func (x *CreateWasteLineRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWasteLineRes.ProtoReflect.Descriptor instead.
func (*CreateWasteLineRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{19}
}

func (x *CreateWasteLineRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWasteLineRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWasteLineRes) GetWasteLine() *XWasteLine {
	if x != nil {
		return x.WasteLine
	}
	return nil
}

func (x *CreateWasteLineRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWasteLinesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWasteLinesReq) Reset() {
	*x = GetWasteLinesReq{}
	mi := &file_measurement_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasteLinesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasteLinesReq) ProtoMessage() {}

func (x *GetWasteLinesReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasteLinesReq.ProtoReflect.Descriptor instead.
func (*GetWasteLinesReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{20}
}

func (x *GetWasteLinesReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWasteLinesRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WasteLine     []*XWasteLine          `protobuf:"bytes,3,rep,name=waste_line,json=wasteLine,proto3" json:"waste_line,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWasteLinesRes) Reset() {
	*x = GetWasteLinesRes{}
	mi := &file_measurement_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasteLinesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasteLinesRes) ProtoMessage() {}

func (x *GetWasteLinesRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasteLinesRes.ProtoReflect.Descriptor instead.
func (*GetWasteLinesRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{21}
}

func (x *GetWasteLinesRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWasteLinesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWasteLinesRes) GetWasteLine() []*XWasteLine {
	if x != nil {
		return x.WasteLine
	}
	return nil
}

func (x *GetWasteLinesRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWasteLineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLineId   string                 `protobuf:"bytes,1,opt,name=waste_line_id,json=wasteLineId,proto3" json:"waste_line_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWasteLineReq) Reset() {
	*x = GetWasteLineReq{}
	mi := &file_measurement_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasteLineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasteLineReq) ProtoMessage() {}

func (x *GetWasteLineReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasteLineReq.ProtoReflect.Descriptor instead.
func (*GetWasteLineReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{22}
}

func (x *GetWasteLineReq) GetWasteLineId() string {
	if x != nil {
		return x.WasteLineId
	}
	return ""
}

func (x *GetWasteLineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWasteLineReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWasteLineRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLineId   string                 `protobuf:"bytes,1,opt,name=waste_line_id,json=wasteLineId,proto3" json:"waste_line_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWasteLineRes) Reset() {
	*x = GetWasteLineRes{}
	mi := &file_measurement_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWasteLineRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWasteLineRes) ProtoMessage() {}

func (x *GetWasteLineRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWasteLineRes.ProtoReflect.Descriptor instead.
func (*GetWasteLineRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{23}
}

func (x *GetWasteLineRes) GetWasteLineId() string {
	if x != nil {
		return x.WasteLineId
	}
	return ""
}

func (x *GetWasteLineRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWasteLineRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteWasteLineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLineId   string                 `protobuf:"bytes,1,opt,name=waste_line_id,json=wasteLineId,proto3" json:"waste_line_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWasteLineReq) Reset() {
	*x = DeleteWasteLineReq{}
	mi := &file_measurement_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWasteLineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWasteLineReq) ProtoMessage() {}

func (x *DeleteWasteLineReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWasteLineReq.ProtoReflect.Descriptor instead.
func (*DeleteWasteLineReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteWasteLineReq) GetWasteLineId() string {
	if x != nil {
		return x.WasteLineId
	}
	return ""
}

func (x *DeleteWasteLineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteWasteLineReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWasteLineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLineId   string                 `protobuf:"bytes,1,opt,name=waste_line_id,json=wasteLineId,proto3" json:"waste_line_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWasteLineReq) Reset() {
	*x = UpdateWasteLineReq{}
	mi := &file_measurement_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWasteLineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWasteLineReq) ProtoMessage() {}

func (x *UpdateWasteLineReq) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWasteLineReq.ProtoReflect.Descriptor instead.
func (*UpdateWasteLineReq) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateWasteLineReq) GetWasteLineId() string {
	if x != nil {
		return x.WasteLineId
	}
	return ""
}

func (x *UpdateWasteLineReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateWasteLineReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateWasteLineReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWasteLineRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WasteLine     *XWasteLine            `protobuf:"bytes,3,opt,name=waste_line,json=wasteLine,proto3" json:"waste_line,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWasteLineRes) Reset() {
	*x = UpdateWasteLineRes{}
	mi := &file_measurement_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWasteLineRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWasteLineRes) ProtoMessage() {}

func (x *UpdateWasteLineRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWasteLineRes.ProtoReflect.Descriptor instead.
func (*UpdateWasteLineRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateWasteLineRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateWasteLineRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateWasteLineRes) GetWasteLine() *XWasteLine {
	if x != nil {
		return x.WasteLine
	}
	return nil
}

func (x *UpdateWasteLineRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type BaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Downstream    string                 `protobuf:"bytes,998,opt,name=downstream,proto3" json:"downstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	mi := &file_measurement_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{27}
}

func (x *BaseRequest) GetDownstream() string {
	if x != nil {
		return x.Downstream
	}
	return ""
}

func (x *BaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type BaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upstream      string                 `protobuf:"bytes,998,opt,name=upstream,proto3" json:"upstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status        string                 `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	mi := &file_measurement_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{28}
}

func (x *BaseResponse) GetUpstream() string {
	if x != nil {
		return x.Upstream
	}
	return ""
}

func (x *BaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BaseResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type NilRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NilRes) Reset() {
	*x = NilRes{}
	mi := &file_measurement_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRes) ProtoMessage() {}

func (x *NilRes) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRes.ProtoReflect.Descriptor instead.
func (*NilRes) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{29}
}

type XDiff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	OldValue      string                 `protobuf:"bytes,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue      string                 `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XDiff) Reset() {
	*x = XDiff{}
	mi := &file_measurement_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDiff) ProtoMessage() {}

func (x *XDiff) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDiff.ProtoReflect.Descriptor instead.
func (*XDiff) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{30}
}

func (x *XDiff) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *XDiff) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *XDiff) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

type XWeight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeightId      string                 `protobuf:"bytes,1,opt,name=weight_id,json=weightId,proto3" json:"weight_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WeightValue   int32                  `protobuf:"varint,3,opt,name=weight_value,json=weightValue,proto3" json:"weight_value,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWeight) Reset() {
	*x = XWeight{}
	mi := &file_measurement_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWeight) ProtoMessage() {}

func (x *XWeight) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWeight.ProtoReflect.Descriptor instead.
func (*XWeight) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{31}
}

func (x *XWeight) GetWeightId() string {
	if x != nil {
		return x.WeightId
	}
	return ""
}

func (x *XWeight) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XWeight) GetWeightValue() int32 {
	if x != nil {
		return x.WeightValue
	}
	return 0
}

func (x *XWeight) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWeight) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type XWaterIntake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaterIntakeId string                 `protobuf:"bytes,1,opt,name=water_intake_id,json=waterIntakeId,proto3" json:"water_intake_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWaterIntake) Reset() {
	*x = XWaterIntake{}
	mi := &file_measurement_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWaterIntake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWaterIntake) ProtoMessage() {}

func (x *XWaterIntake) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWaterIntake.ProtoReflect.Descriptor instead.
func (*XWaterIntake) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{32}
}

func (x *XWaterIntake) GetWaterIntakeId() string {
	if x != nil {
		return x.WaterIntakeId
	}
	return ""
}

func (x *XWaterIntake) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XWaterIntake) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *XWaterIntake) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWaterIntake) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type XWasteLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasteLineId   string                 `protobuf:"bytes,1,opt,name=waste_line_id,json=wasteLineId,proto3" json:"waste_line_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Measurement   int32                  `protobuf:"varint,3,opt,name=measurement,proto3" json:"measurement,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWasteLine) Reset() {
	*x = XWasteLine{}
	mi := &file_measurement_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWasteLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWasteLine) ProtoMessage() {}

func (x *XWasteLine) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWasteLine.ProtoReflect.Descriptor instead.
func (*XWasteLine) Descriptor() ([]byte, []int) {
	return file_measurement_proto_rawDescGZIP(), []int{33}
}

func (x *XWasteLine) GetWasteLineId() string {
	if x != nil {
		return x.WasteLineId
	}
	return ""
}

func (x *XWasteLine) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XWasteLine) GetMeasurement() int32 {
	if x != nil {
		return x.Measurement
	}
	return 0
}

func (x *XWasteLine) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWasteLine) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_measurement_proto protoreflect.FileDescriptor

const file_measurement_proto_rawDesc = "" +
	"\n" +
	"\x11measurement.proto\x12\x15fitSphere.measurement\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x01\n" +
	"\x0fCreateWeightReq\x126\n" +
	"\x06weight\x18\x01 \x01(\v2\x1e.fitSphere.measurement.XWeightR\x06weight\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xbe\x01\n" +
	"\x0fCreateWeightRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x126\n" +
	"\x06weight\x18\x03 \x01(\v2\x1e.fitSphere.measurement.XWeightR\x06weight\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"M\n" +
	"\rGetWeightsReq\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xbc\x01\n" +
	"\rGetWeightsRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x126\n" +
	"\x06weight\x18\x03 \x03(\v2\x1e.fitSphere.measurement.XWeightR\x06weight\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x82\x01\n" +
	"\fGetWeightReq\x12\x1b\n" +
	"\tweight_id\x18\x01 \x01(\tR\bweightId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\x85\x01\n" +
	"\fGetWeightRes\x12\x1b\n" +
	"\tweight_id\x18\x01 \x01(\tR\bweightId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x85\x01\n" +
	"\x0fDeleteWeightReq\x12\x1b\n" +
	"\tweight_id\x18\x01 \x01(\tR\bweightId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xbd\x01\n" +
	"\x0fUpdateWeightReq\x12\x1b\n" +
	"\tweight_id\x18\x01 \x01(\tR\bweightId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x126\n" +
	"\aupdates\x18\x03 \x03(\v2\x1c.fitSphere.measurement.XDiffR\aupdates\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xbe\x01\n" +
	"\x0fUpdateWeightRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x126\n" +
	"\x06weight\x18\x03 \x01(\v2\x1e.fitSphere.measurement.XWeightR\x06weight\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\xa8\x01\n" +
	"\x14CreateWaterIntakeReq\x129\n" +
	"\x05water\x18\x01 \x01(\v2#.fitSphere.measurement.XWaterIntakeR\x05water\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xc6\x01\n" +
	"\x14CreateWaterIntakeRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\x05water\x18\x03 \x01(\v2#.fitSphere.measurement.XWaterIntakeR\x05water\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"R\n" +
	"\x12GetWaterIntakesReq\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xc4\x01\n" +
	"\x12GetWaterIntakesRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\x05water\x18\x03 \x03(\v2#.fitSphere.measurement.XWaterIntakeR\x05water\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x92\x01\n" +
	"\x11GetWaterIntakeReq\x12&\n" +
	"\x0fwater_intake_id\x18\x01 \x01(\tR\rwaterIntakeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\x95\x01\n" +
	"\x11GetWaterIntakeRes\x12&\n" +
	"\x0fwater_intake_id\x18\x01 \x01(\tR\rwaterIntakeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x95\x01\n" +
	"\x14DeleteWaterIntakeReq\x12&\n" +
	"\x0fwater_intake_id\x18\x01 \x01(\tR\rwaterIntakeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xcd\x01\n" +
	"\x14UpdateWaterIntakeReq\x12&\n" +
	"\x0fwater_intake_id\x18\x01 \x01(\tR\rwaterIntakeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x126\n" +
	"\aupdates\x18\x03 \x03(\v2\x1c.fitSphere.measurement.XDiffR\aupdates\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xc6\x01\n" +
	"\x14UpdateWaterIntakeRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\x05water\x18\x03 \x01(\v2#.fitSphere.measurement.XWaterIntakeR\x05water\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\xad\x01\n" +
	"\x12CreateWasteLineReq\x12@\n" +
	"\n" +
	"waste_line\x18\x01 \x01(\v2!.fitSphere.measurement.XWasteLineR\twasteLine\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xcb\x01\n" +
	"\x12CreateWasteLineRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\n" +
	"waste_line\x18\x03 \x01(\v2!.fitSphere.measurement.XWasteLineR\twasteLine\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"P\n" +
	"\x10GetWasteLinesReq\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xc9\x01\n" +
	"\x10GetWasteLinesRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\n" +
	"waste_line\x18\x03 \x03(\v2!.fitSphere.measurement.XWasteLineR\twasteLine\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x8c\x01\n" +
	"\x0fGetWasteLineReq\x12\"\n" +
	"\rwaste_line_id\x18\x01 \x01(\tR\vwasteLineId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\x8f\x01\n" +
	"\x0fGetWasteLineRes\x12\"\n" +
	"\rwaste_line_id\x18\x01 \x01(\tR\vwasteLineId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"\x8f\x01\n" +
	"\x12DeleteWasteLineReq\x12\"\n" +
	"\rwaste_line_id\x18\x01 \x01(\tR\vwasteLineId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xc7\x01\n" +
	"\x12UpdateWasteLineReq\x12\"\n" +
	"\rwaste_line_id\x18\x01 \x01(\tR\vwasteLineId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x126\n" +
	"\aupdates\x18\x03 \x03(\v2\x1c.fitSphere.measurement.XDiffR\aupdates\x12<\n" +
	"\arequest\x18d \x01(\v2\".fitSphere.measurement.BaseRequestR\arequest\"\xcb\x01\n" +
	"\x12UpdateWasteLineRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12@\n" +
	"\n" +
	"waste_line\x18\x03 \x01(\v2!.fitSphere.measurement.XWasteLineR\twasteLine\x12?\n" +
	"\bresponse\x18d \x01(\v2#.fitSphere.measurement.BaseResponseR\bresponse\"N\n" +
	"\vBaseRequest\x12\x1f\n" +
	"\n" +
	"downstream\x18\xe6\a \x01(\tR\n" +
	"downstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\"d\n" +
	"\fBaseResponse\x12\x1b\n" +
	"\bupstream\x18\xe6\a \x01(\tR\bupstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\x12\x17\n" +
	"\x06status\x18\xe8\a \x01(\tR\x06status\"\b\n" +
	"\x06NilRes\"W\n" +
	"\x05XDiff\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1b\n" +
	"\told_value\x18\x02 \x01(\tR\boldValue\x12\x1b\n" +
	"\tnew_value\x18\x03 \x01(\tR\bnewValue\"\xd8\x01\n" +
	"\aXWeight\x12\x1b\n" +
	"\tweight_id\x18\x01 \x01(\tR\bweightId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fweight_value\x18\x03 \x01(\x05R\vweightValue\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe1\x01\n" +
	"\fXWaterIntake\x12&\n" +
	"\x0fwater_intake_id\x18\x01 \x01(\tR\rwaterIntakeId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe1\x01\n" +
	"\n" +
	"XWasteLine\x12\"\n" +
	"\rwaste_line_id\x18\x01 \x01(\tR\vwasteLineId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12 \n" +
	"\vmeasurement\x18\x03 \x01(\x05R\vmeasurement\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt2\xaa\f\n" +
	"\x10UserMeasurements\x12^\n" +
	"\fCreateWeight\x12&.fitSphere.measurement.CreateWeightReq\x1a&.fitSphere.measurement.CreateWeightRes\x12X\n" +
	"\n" +
	"GetWeights\x12$.fitSphere.measurement.GetWeightsReq\x1a$.fitSphere.measurement.GetWeightsRes\x12U\n" +
	"\tGetWeight\x12#.fitSphere.measurement.GetWeightReq\x1a#.fitSphere.measurement.GetWeightRes\x12U\n" +
	"\fDeleteWeight\x12&.fitSphere.measurement.DeleteWeightReq\x1a\x1d.fitSphere.measurement.NilRes\x12^\n" +
	"\fUpdateWeight\x12&.fitSphere.measurement.UpdateWeightReq\x1a&.fitSphere.measurement.UpdateWeightRes\x12r\n" +
	"\x16CreateWaterMeasurement\x12+.fitSphere.measurement.CreateWaterIntakeReq\x1a+.fitSphere.measurement.CreateWaterIntakeRes\x12l\n" +
	"\x14GetWaterMeasurements\x12).fitSphere.measurement.GetWaterIntakesReq\x1a).fitSphere.measurement.GetWaterIntakesRes\x12i\n" +
	"\x13GetWaterMeasurement\x12(.fitSphere.measurement.GetWaterIntakeReq\x1a(.fitSphere.measurement.GetWaterIntakeRes\x12d\n" +
	"\x16DeleteWaterMeasurement\x12+.fitSphere.measurement.DeleteWaterIntakeReq\x1a\x1d.fitSphere.measurement.NilRes\x12r\n" +
	"\x16UpdateWaterMeasurement\x12+.fitSphere.measurement.UpdateWaterIntakeReq\x1a+.fitSphere.measurement.UpdateWaterIntakeRes\x12r\n" +
	"\x1aCreateWasteLineMeasurement\x12).fitSphere.measurement.CreateWasteLineReq\x1a).fitSphere.measurement.CreateWasteLineRes\x12l\n" +
	"\x18GetWasteLineMeasurements\x12'.fitSphere.measurement.GetWasteLinesReq\x1a'.fitSphere.measurement.GetWasteLinesRes\x12i\n" +
	"\x17GetWasteLineMeasurement\x12&.fitSphere.measurement.GetWasteLineReq\x1a&.fitSphere.measurement.GetWasteLineRes\x12f\n" +
	"\x1aDeleteWasteLineMeasurement\x12).fitSphere.measurement.DeleteWasteLineReq\x1a\x1d.fitSphere.measurement.NilRes\x12r\n" +
	"\x1aUpdateWasteLineMeasurement\x12).fitSphere.measurement.UpdateWasteLineReq\x1a).fitSphere.measurement.UpdateWasteLineResb\x06proto3"

var (
	file_measurement_proto_rawDescOnce sync.Once
	file_measurement_proto_rawDescData []byte
)

func file_measurement_proto_rawDescGZIP() []byte {
	file_measurement_proto_rawDescOnce.Do(func() {
		file_measurement_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_measurement_proto_rawDesc), len(file_measurement_proto_rawDesc)))
	})
	return file_measurement_proto_rawDescData
}

var file_measurement_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_measurement_proto_goTypes = []any{
	(*CreateWeightReq)(nil),       // 0: fitSphere.measurement.CreateWeightReq
	(*CreateWeightRes)(nil),       // 1: fitSphere.measurement.CreateWeightRes
	(*GetWeightsReq)(nil),         // 2: fitSphere.measurement.GetWeightsReq
	(*GetWeightsRes)(nil),         // 3: fitSphere.measurement.GetWeightsRes
	(*GetWeightReq)(nil),          // 4: fitSphere.measurement.GetWeightReq
	(*GetWeightRes)(nil),          // 5: fitSphere.measurement.GetWeightRes
	(*DeleteWeightReq)(nil),       // 6: fitSphere.measurement.DeleteWeightReq
	(*UpdateWeightReq)(nil),       // 7: fitSphere.measurement.UpdateWeightReq
	(*UpdateWeightRes)(nil),       // 8: fitSphere.measurement.UpdateWeightRes
	(*CreateWaterIntakeReq)(nil),  // 9: fitSphere.measurement.CreateWaterIntakeReq
	(*CreateWaterIntakeRes)(nil),  // 10: fitSphere.measurement.CreateWaterIntakeRes
	(*GetWaterIntakesReq)(nil),    // 11: fitSphere.measurement.GetWaterIntakesReq
	(*GetWaterIntakesRes)(nil),    // 12: fitSphere.measurement.GetWaterIntakesRes
	(*GetWaterIntakeReq)(nil),     // 13: fitSphere.measurement.GetWaterIntakeReq
	(*GetWaterIntakeRes)(nil),     // 14: fitSphere.measurement.GetWaterIntakeRes
	(*DeleteWaterIntakeReq)(nil),  // 15: fitSphere.measurement.DeleteWaterIntakeReq
	(*UpdateWaterIntakeReq)(nil),  // 16: fitSphere.measurement.UpdateWaterIntakeReq
	(*UpdateWaterIntakeRes)(nil),  // 17: fitSphere.measurement.UpdateWaterIntakeRes
	(*CreateWasteLineReq)(nil),    // 18: fitSphere.measurement.CreateWasteLineReq
	(*CreateWasteLineRes)(nil),    // 19: fitSphere.measurement.CreateWasteLineRes
	(*GetWasteLinesReq)(nil),      // 20: fitSphere.measurement.GetWasteLinesReq
	(*GetWasteLinesRes)(nil),      // 21: fitSphere.measurement.GetWasteLinesRes
	(*GetWasteLineReq)(nil),       // 22: fitSphere.measurement.GetWasteLineReq
	(*GetWasteLineRes)(nil),       // 23: fitSphere.measurement.GetWasteLineRes
	(*DeleteWasteLineReq)(nil),    // 24: fitSphere.measurement.DeleteWasteLineReq
	(*UpdateWasteLineReq)(nil),    // 25: fitSphere.measurement.UpdateWasteLineReq
	(*UpdateWasteLineRes)(nil),    // 26: fitSphere.measurement.UpdateWasteLineRes
	(*BaseRequest)(nil),           // 27: fitSphere.measurement.BaseRequest
	(*BaseResponse)(nil),          // 28: fitSphere.measurement.BaseResponse
	(*NilRes)(nil),                // 29: fitSphere.measurement.NilRes
	(*XDiff)(nil),                 // 30: fitSphere.measurement.XDiff
	(*XWeight)(nil),               // 31: fitSphere.measurement.XWeight
	(*XWaterIntake)(nil),          // 32: fitSphere.measurement.XWaterIntake
	(*XWasteLine)(nil),            // 33: fitSphere.measurement.XWasteLine
	(*timestamppb.Timestamp)(nil), // 34: google.protobuf.Timestamp
}
var file_measurement_proto_depIdxs = []int32{
	31, // 0: fitSphere.measurement.CreateWeightReq.weight:type_name -> fitSphere.measurement.XWeight
	27, // 1: fitSphere.measurement.CreateWeightReq.request:type_name -> fitSphere.measurement.BaseRequest
	31, // 2: fitSphere.measurement.CreateWeightRes.weight:type_name -> fitSphere.measurement.XWeight
	28, // 3: fitSphere.measurement.CreateWeightRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 4: fitSphere.measurement.GetWeightsReq.request:type_name -> fitSphere.measurement.BaseRequest
	31, // 5: fitSphere.measurement.GetWeightsRes.weight:type_name -> fitSphere.measurement.XWeight
	28, // 6: fitSphere.measurement.GetWeightsRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 7: fitSphere.measurement.GetWeightReq.request:type_name -> fitSphere.measurement.BaseRequest
	28, // 8: fitSphere.measurement.GetWeightRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 9: fitSphere.measurement.DeleteWeightReq.request:type_name -> fitSphere.measurement.BaseRequest
	30, // 10: fitSphere.measurement.UpdateWeightReq.updates:type_name -> fitSphere.measurement.XDiff
	27, // 11: fitSphere.measurement.UpdateWeightReq.request:type_name -> fitSphere.measurement.BaseRequest
	31, // 12: fitSphere.measurement.UpdateWeightRes.weight:type_name -> fitSphere.measurement.XWeight
	28, // 13: fitSphere.measurement.UpdateWeightRes.response:type_name -> fitSphere.measurement.BaseResponse
	32, // 14: fitSphere.measurement.CreateWaterIntakeReq.water:type_name -> fitSphere.measurement.XWaterIntake
	27, // 15: fitSphere.measurement.CreateWaterIntakeReq.request:type_name -> fitSphere.measurement.BaseRequest
	32, // 16: fitSphere.measurement.CreateWaterIntakeRes.water:type_name -> fitSphere.measurement.XWaterIntake
	28, // 17: fitSphere.measurement.CreateWaterIntakeRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 18: fitSphere.measurement.GetWaterIntakesReq.request:type_name -> fitSphere.measurement.BaseRequest
	32, // 19: fitSphere.measurement.GetWaterIntakesRes.water:type_name -> fitSphere.measurement.XWaterIntake
	28, // 20: fitSphere.measurement.GetWaterIntakesRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 21: fitSphere.measurement.GetWaterIntakeReq.request:type_name -> fitSphere.measurement.BaseRequest
	28, // 22: fitSphere.measurement.GetWaterIntakeRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 23: fitSphere.measurement.DeleteWaterIntakeReq.request:type_name -> fitSphere.measurement.BaseRequest
	30, // 24: fitSphere.measurement.UpdateWaterIntakeReq.updates:type_name -> fitSphere.measurement.XDiff
	27, // 25: fitSphere.measurement.UpdateWaterIntakeReq.request:type_name -> fitSphere.measurement.BaseRequest
	32, // 26: fitSphere.measurement.UpdateWaterIntakeRes.water:type_name -> fitSphere.measurement.XWaterIntake
	28, // 27: fitSphere.measurement.UpdateWaterIntakeRes.response:type_name -> fitSphere.measurement.BaseResponse
	33, // 28: fitSphere.measurement.CreateWasteLineReq.waste_line:type_name -> fitSphere.measurement.XWasteLine
	27, // 29: fitSphere.measurement.CreateWasteLineReq.request:type_name -> fitSphere.measurement.BaseRequest
	33, // 30: fitSphere.measurement.CreateWasteLineRes.waste_line:type_name -> fitSphere.measurement.XWasteLine
	28, // 31: fitSphere.measurement.CreateWasteLineRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 32: fitSphere.measurement.GetWasteLinesReq.request:type_name -> fitSphere.measurement.BaseRequest
	33, // 33: fitSphere.measurement.GetWasteLinesRes.waste_line:type_name -> fitSphere.measurement.XWasteLine
	28, // 34: fitSphere.measurement.GetWasteLinesRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 35: fitSphere.measurement.GetWasteLineReq.request:type_name -> fitSphere.measurement.BaseRequest
	28, // 36: fitSphere.measurement.GetWasteLineRes.response:type_name -> fitSphere.measurement.BaseResponse
	27, // 37: fitSphere.measurement.DeleteWasteLineReq.request:type_name -> fitSphere.measurement.BaseRequest
	30, // 38: fitSphere.measurement.UpdateWasteLineReq.updates:type_name -> fitSphere.measurement.XDiff
	27, // 39: fitSphere.measurement.UpdateWasteLineReq.request:type_name -> fitSphere.measurement.BaseRequest
	33, // 40: fitSphere.measurement.UpdateWasteLineRes.waste_line:type_name -> fitSphere.measurement.XWasteLine
	28, // 41: fitSphere.measurement.UpdateWasteLineRes.response:type_name -> fitSphere.measurement.BaseResponse
	34, // 42: fitSphere.measurement.XWeight.created_at:type_name -> google.protobuf.Timestamp
	34, // 43: fitSphere.measurement.XWeight.updated_at:type_name -> google.protobuf.Timestamp
	34, // 44: fitSphere.measurement.XWaterIntake.created_at:type_name -> google.protobuf.Timestamp
	34, // 45: fitSphere.measurement.XWaterIntake.updated_at:type_name -> google.protobuf.Timestamp
	34, // 46: fitSphere.measurement.XWasteLine.created_at:type_name -> google.protobuf.Timestamp
	34, // 47: fitSphere.measurement.XWasteLine.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 48: fitSphere.measurement.UserMeasurements.CreateWeight:input_type -> fitSphere.measurement.CreateWeightReq
	2,  // 49: fitSphere.measurement.UserMeasurements.GetWeights:input_type -> fitSphere.measurement.GetWeightsReq
	4,  // 50: fitSphere.measurement.UserMeasurements.GetWeight:input_type -> fitSphere.measurement.GetWeightReq
	6,  // 51: fitSphere.measurement.UserMeasurements.DeleteWeight:input_type -> fitSphere.measurement.DeleteWeightReq
	7,  // 52: fitSphere.measurement.UserMeasurements.UpdateWeight:input_type -> fitSphere.measurement.UpdateWeightReq
	9,  // 53: fitSphere.measurement.UserMeasurements.CreateWaterMeasurement:input_type -> fitSphere.measurement.CreateWaterIntakeReq
	11, // 54: fitSphere.measurement.UserMeasurements.GetWaterMeasurements:input_type -> fitSphere.measurement.GetWaterIntakesReq
	13, // 55: fitSphere.measurement.UserMeasurements.GetWaterMeasurement:input_type -> fitSphere.measurement.GetWaterIntakeReq
	15, // 56: fitSphere.measurement.UserMeasurements.DeleteWaterMeasurement:input_type -> fitSphere.measurement.DeleteWaterIntakeReq
	16, // 57: fitSphere.measurement.UserMeasurements.UpdateWaterMeasurement:input_type -> fitSphere.measurement.UpdateWaterIntakeReq
	18, // 58: fitSphere.measurement.UserMeasurements.CreateWasteLineMeasurement:input_type -> fitSphere.measurement.CreateWasteLineReq
	20, // 59: fitSphere.measurement.UserMeasurements.GetWasteLineMeasurements:input_type -> fitSphere.measurement.GetWasteLinesReq
	22, // 60: fitSphere.measurement.UserMeasurements.GetWasteLineMeasurement:input_type -> fitSphere.measurement.GetWasteLineReq
	24, // 61: fitSphere.measurement.UserMeasurements.DeleteWasteLineMeasurement:input_type -> fitSphere.measurement.DeleteWasteLineReq
	25, // 62: fitSphere.measurement.UserMeasurements.UpdateWasteLineMeasurement:input_type -> fitSphere.measurement.UpdateWasteLineReq
	1,  // 63: fitSphere.measurement.UserMeasurements.CreateWeight:output_type -> fitSphere.measurement.CreateWeightRes
	3,  // 64: fitSphere.measurement.UserMeasurements.GetWeights:output_type -> fitSphere.measurement.GetWeightsRes
	5,  // 65: fitSphere.measurement.UserMeasurements.GetWeight:output_type -> fitSphere.measurement.GetWeightRes
	29, // 66: fitSphere.measurement.UserMeasurements.DeleteWeight:output_type -> fitSphere.measurement.NilRes
	8,  // 67: fitSphere.measurement.UserMeasurements.UpdateWeight:output_type -> fitSphere.measurement.UpdateWeightRes
	10, // 68: fitSphere.measurement.UserMeasurements.CreateWaterMeasurement:output_type -> fitSphere.measurement.CreateWaterIntakeRes
	12, // 69: fitSphere.measurement.UserMeasurements.GetWaterMeasurements:output_type -> fitSphere.measurement.GetWaterIntakesRes
	14, // 70: fitSphere.measurement.UserMeasurements.GetWaterMeasurement:output_type -> fitSphere.measurement.GetWaterIntakeRes
	29, // 71: fitSphere.measurement.UserMeasurements.DeleteWaterMeasurement:output_type -> fitSphere.measurement.NilRes
	17, // 72: fitSphere.measurement.UserMeasurements.UpdateWaterMeasurement:output_type -> fitSphere.measurement.UpdateWaterIntakeRes
	19, // 73: fitSphere.measurement.UserMeasurements.CreateWasteLineMeasurement:output_type -> fitSphere.measurement.CreateWasteLineRes
	21, // 74: fitSphere.measurement.UserMeasurements.GetWasteLineMeasurements:output_type -> fitSphere.measurement.GetWasteLinesRes
	23, // 75: fitSphere.measurement.UserMeasurements.GetWasteLineMeasurement:output_type -> fitSphere.measurement.GetWasteLineRes
	29, // 76: fitSphere.measurement.UserMeasurements.DeleteWasteLineMeasurement:output_type -> fitSphere.measurement.NilRes
	26, // 77: fitSphere.measurement.UserMeasurements.UpdateWasteLineMeasurement:output_type -> fitSphere.measurement.UpdateWasteLineRes
	63, // [63:78] is the sub-list for method output_type
	48, // [48:63] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_measurement_proto_init() }
func file_measurement_proto_init() {
	if File_measurement_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_measurement_proto_rawDesc), len(file_measurement_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_measurement_proto_goTypes,
		DependencyIndexes: file_measurement_proto_depIdxs,
		MessageInfos:      file_measurement_proto_msgTypes,
	}.Build()
	File_measurement_proto = out.File
	file_measurement_proto_goTypes = nil
	file_measurement_proto_depIdxs = nil
}
