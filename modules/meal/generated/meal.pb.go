// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.2
// source: meal.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NilRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NilRes) Reset() {
	*x = NilRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRes) ProtoMessage() {}

func (x *NilRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRes.ProtoReflect.Descriptor instead.
func (*NilRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{0}
}

type XDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	OldValue string `protobuf:"bytes,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue string `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
}

func (x *XDiff) Reset() {
	*x = XDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDiff) ProtoMessage() {}

func (x *XDiff) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDiff.ProtoReflect.Descriptor instead.
func (*XDiff) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{1}
}

func (x *XDiff) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *XDiff) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *XDiff) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

type BaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Downstream string `protobuf:"bytes,998,opt,name=downstream,proto3" json:"downstream,omitempty"`
	RequestId  string `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{2}
}

func (x *BaseRequest) GetDownstream() string {
	if x != nil {
		return x.Downstream
	}
	return ""
}

func (x *BaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upstream  string `protobuf:"bytes,998,opt,name=upstream,proto3" json:"upstream,omitempty"`
	RequestId string `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{3}
}

func (x *BaseResponse) GetUpstream() string {
	if x != nil {
		return x.Upstream
	}
	return ""
}

func (x *BaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetMealPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId string       `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"` // The ID of the meal plan
	Request    *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetMealPlanReq) Reset() {
	*x = GetMealPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMealPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMealPlanReq) ProtoMessage() {}

func (x *GetMealPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMealPlanReq.ProtoReflect.Descriptor instead.
func (*GetMealPlanReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{4}
}

func (x *GetMealPlanReq) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *GetMealPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetMealPlanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId  string                 `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ingredients []*XIngredient         `protobuf:"bytes,3,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Response    *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetMealPlanRes) Reset() {
	*x = GetMealPlanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMealPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMealPlanRes) ProtoMessage() {}

func (x *GetMealPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMealPlanRes.ProtoReflect.Descriptor instead.
func (*GetMealPlanRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{5}
}

func (x *GetMealPlanRes) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *GetMealPlanRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMealPlanRes) GetIngredients() []*XIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *GetMealPlanRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetMealPlanRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetMealPlanRes) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetMealPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetMealPlansReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID to filter meal plans
	Request *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetMealPlansReq) Reset() {
	*x = GetMealPlansReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMealPlansReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMealPlansReq) ProtoMessage() {}

func (x *GetMealPlansReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMealPlansReq.ProtoReflect.Descriptor instead.
func (*GetMealPlansReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{6}
}

func (x *GetMealPlansReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMealPlansReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetMealPlansRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlans []*MealPlanSummary `protobuf:"bytes,1,rep,name=meal_plans,json=mealPlans,proto3" json:"meal_plans,omitempty"`
	Response  *BaseResponse      `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetMealPlansRes) Reset() {
	*x = GetMealPlansRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMealPlansRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMealPlansRes) ProtoMessage() {}

func (x *GetMealPlansRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMealPlansRes.ProtoReflect.Descriptor instead.
func (*GetMealPlansRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{7}
}

func (x *GetMealPlansRes) GetMealPlans() []*MealPlanSummary {
	if x != nil {
		return x.MealPlans
	}
	return nil
}

func (x *GetMealPlansRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type MealPlanSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId  string `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MealPlanSummary) Reset() {
	*x = MealPlanSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealPlanSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealPlanSummary) ProtoMessage() {}

func (x *MealPlanSummary) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealPlanSummary.ProtoReflect.Descriptor instead.
func (*MealPlanSummary) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{8}
}

func (x *MealPlanSummary) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *MealPlanSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MealPlanSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateMealPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IngredientIds []string     `protobuf:"bytes,3,rep,name=ingredient_ids,json=ingredientIds,proto3" json:"ingredient_ids,omitempty"` // List of ingredient IDs
	Request       *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreateMealPlanReq) Reset() {
	*x = CreateMealPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMealPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMealPlanReq) ProtoMessage() {}

func (x *CreateMealPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMealPlanReq.ProtoReflect.Descriptor instead.
func (*CreateMealPlanReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMealPlanReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMealPlanReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMealPlanReq) GetIngredientIds() []string {
	if x != nil {
		return x.IngredientIds
	}
	return nil
}

func (x *CreateMealPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateMealPlanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId string        `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	Status     string        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Response   *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateMealPlanRes) Reset() {
	*x = CreateMealPlanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMealPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMealPlanRes) ProtoMessage() {}

func (x *CreateMealPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMealPlanRes.ProtoReflect.Descriptor instead.
func (*CreateMealPlanRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{10}
}

func (x *CreateMealPlanRes) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *CreateMealPlanRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateMealPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateMealPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId string       `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	Updates    []*XDiff     `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Request    *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateMealPlanReq) Reset() {
	*x = UpdateMealPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMealPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMealPlanReq) ProtoMessage() {}

func (x *UpdateMealPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMealPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateMealPlanReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMealPlanReq) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *UpdateMealPlanReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateMealPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateMealPlanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message  string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MealPlan *XMealPlan    `protobuf:"bytes,3,opt,name=meal_plan,json=mealPlan,proto3" json:"meal_plan,omitempty"`
	Response *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateMealPlanRes) Reset() {
	*x = UpdateMealPlanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMealPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMealPlanRes) ProtoMessage() {}

func (x *UpdateMealPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMealPlanRes.ProtoReflect.Descriptor instead.
func (*UpdateMealPlanRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateMealPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateMealPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateMealPlanRes) GetMealPlan() *XMealPlan {
	if x != nil {
		return x.MealPlan
	}
	return nil
}

func (x *UpdateMealPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteMealPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId string       `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	Request    *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *DeleteMealPlanReq) Reset() {
	*x = DeleteMealPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMealPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMealPlanReq) ProtoMessage() {}

func (x *DeleteMealPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMealPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteMealPlanReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMealPlanReq) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *DeleteMealPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type AddIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId   string       `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	IngredientId string       `protobuf:"bytes,2,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Request      *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *AddIngredientReq) Reset() {
	*x = AddIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIngredientReq) ProtoMessage() {}

func (x *AddIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIngredientReq.ProtoReflect.Descriptor instead.
func (*AddIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{14}
}

func (x *AddIngredientReq) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *AddIngredientReq) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *AddIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type RemoveIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MealPlanId   string       `protobuf:"bytes,1,opt,name=meal_plan_id,json=mealPlanId,proto3" json:"meal_plan_id,omitempty"`
	IngredientId string       `protobuf:"bytes,2,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Request      *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *RemoveIngredientReq) Reset() {
	*x = RemoveIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIngredientReq) ProtoMessage() {}

func (x *RemoveIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIngredientReq.ProtoReflect.Descriptor instead.
func (*RemoveIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveIngredientReq) GetMealPlanId() string {
	if x != nil {
		return x.MealPlanId
	}
	return ""
}

func (x *RemoveIngredientReq) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *RemoveIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetIngredientsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Optional filter, e.g., by user
	Request *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetIngredientsReq) Reset() {
	*x = GetIngredientsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientsReq) ProtoMessage() {}

func (x *GetIngredientsReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientsReq.ProtoReflect.Descriptor instead.
func (*GetIngredientsReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{16}
}

func (x *GetIngredientsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetIngredientsReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetIngredientsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients []*XIngredient `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Response    *BaseResponse  `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetIngredientsRes) Reset() {
	*x = GetIngredientsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientsRes) ProtoMessage() {}

func (x *GetIngredientsRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientsRes.ProtoReflect.Descriptor instead.
func (*GetIngredientsRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{17}
}

func (x *GetIngredientsRes) GetIngredients() []*XIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *GetIngredientsRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngredientId string       `protobuf:"bytes,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Request      *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetIngredientReq) Reset() {
	*x = GetIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientReq) ProtoMessage() {}

func (x *GetIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientReq.ProtoReflect.Descriptor instead.
func (*GetIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{18}
}

func (x *GetIngredientReq) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *GetIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetIngredientRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredient *XIngredient  `protobuf:"bytes,1,opt,name=ingredient,proto3" json:"ingredient,omitempty"`
	Response   *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetIngredientRes) Reset() {
	*x = GetIngredientRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngredientRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngredientRes) ProtoMessage() {}

func (x *GetIngredientRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngredientRes.ProtoReflect.Descriptor instead.
func (*GetIngredientRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{19}
}

func (x *GetIngredientRes) GetIngredient() *XIngredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

func (x *GetIngredientRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category    string       `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Unit        string       `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"` // e.g., grams, pieces
	Request     *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreateIngredientReq) Reset() {
	*x = CreateIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientReq) ProtoMessage() {}

func (x *CreateIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientReq.ProtoReflect.Descriptor instead.
func (*CreateIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{20}
}

func (x *CreateIngredientReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIngredientReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateIngredientReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateIngredientReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreateIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateIngredientRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngredientId string        `protobuf:"bytes,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Response     *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CreateIngredientRes) Reset() {
	*x = CreateIngredientRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientRes) ProtoMessage() {}

func (x *CreateIngredientRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientRes.ProtoReflect.Descriptor instead.
func (*CreateIngredientRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{21}
}

func (x *CreateIngredientRes) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *CreateIngredientRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngredientId string       `protobuf:"bytes,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Updates      []*XDiff     `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Request      *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateIngredientReq) Reset() {
	*x = UpdateIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngredientReq) ProtoMessage() {}

func (x *UpdateIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngredientReq.ProtoReflect.Descriptor instead.
func (*UpdateIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateIngredientReq) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *UpdateIngredientReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateIngredientRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message    string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ingredient *XIngredient  `protobuf:"bytes,3,opt,name=ingredient,proto3" json:"ingredient,omitempty"`
	Response   *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateIngredientRes) Reset() {
	*x = UpdateIngredientRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngredientRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngredientRes) ProtoMessage() {}

func (x *UpdateIngredientRes) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngredientRes.ProtoReflect.Descriptor instead.
func (*UpdateIngredientRes) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateIngredientRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateIngredientRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateIngredientRes) GetIngredient() *XIngredient {
	if x != nil {
		return x.Ingredient
	}
	return nil
}

func (x *UpdateIngredientRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteIngredientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngredientId string       `protobuf:"bytes,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Request      *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *DeleteIngredientReq) Reset() {
	*x = DeleteIngredientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIngredientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIngredientReq) ProtoMessage() {}

func (x *DeleteIngredientReq) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIngredientReq.ProtoReflect.Descriptor instead.
func (*DeleteIngredientReq) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteIngredientReq) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *DeleteIngredientReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

// Ingredient definition used across various messages
type XIngredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IngredientId string                 `protobuf:"bytes,1,opt,name=ingredient_id,json=ingredientId,proto3" json:"ingredient_id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category     string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`   // e.g., protein, carb, etc.
	Unit         string                 `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`           // e.g., grams, pieces
	Quantity     float32                `protobuf:"fixed32,6,opt,name=quantity,proto3" json:"quantity,omitempty"` // Quantity in the specified unit
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *XIngredient) Reset() {
	*x = XIngredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XIngredient) ProtoMessage() {}

func (x *XIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XIngredient.ProtoReflect.Descriptor instead.
func (*XIngredient) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{25}
}

func (x *XIngredient) GetIngredientId() string {
	if x != nil {
		return x.IngredientId
	}
	return ""
}

func (x *XIngredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XIngredient) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *XIngredient) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *XIngredient) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *XIngredient) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *XIngredient) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XIngredient) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type XMealPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XMealPlan) Reset() {
	*x = XMealPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meal_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XMealPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XMealPlan) ProtoMessage() {}

func (x *XMealPlan) ProtoReflect() protoreflect.Message {
	mi := &file_meal_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XMealPlan.ProtoReflect.Descriptor instead.
func (*XMealPlan) Descriptor() ([]byte, []int) {
	return file_meal_proto_rawDescGZIP(), []int{26}
}

var File_meal_proto protoreflect.FileDescriptor

var file_meal_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x65, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x66, 0x69,
	0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x05,
	0x58, 0x44, 0x69, 0x66, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x18, 0xe6, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0xe7, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0xe6, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0xe7, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68,
	0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53,
	0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4d, 0x65, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x09, 0x6d, 0x65,
	0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53,
	0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x8c, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa7, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58,
	0x44, 0x69, 0x66, 0x66, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58, 0x4d, 0x65,
	0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x71, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68,
	0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74,
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x96, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74,
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x58, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69,
	0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x93, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x79, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69,
	0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58, 0x44, 0x69,
	0x66, 0x66, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68,
	0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x58, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68,
	0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x02, 0x0a,
	0x0b, 0x58, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x58, 0x4d, 0x65,
	0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x32, 0xa0, 0x05, 0x0a, 0x08, 0x4d, 0x65, 0x61, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x57, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x23, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68,
	0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x66, 0x69, 0x74,
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26,
	0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4e, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x25,
	0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4e, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x65, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x4e, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x32, 0xf9, 0x03, 0x0a, 0x0b, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x69,
	0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x66,
	0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x2e, 0x66, 0x69, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x74, 0x53, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x4e,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meal_proto_rawDescOnce sync.Once
	file_meal_proto_rawDescData = file_meal_proto_rawDesc
)

func file_meal_proto_rawDescGZIP() []byte {
	file_meal_proto_rawDescOnce.Do(func() {
		file_meal_proto_rawDescData = protoimpl.X.CompressGZIP(file_meal_proto_rawDescData)
	})
	return file_meal_proto_rawDescData
}

var file_meal_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_meal_proto_goTypes = []any{
	(*NilRes)(nil),                // 0: fitSphere.meal_plan.NilRes
	(*XDiff)(nil),                 // 1: fitSphere.meal_plan.XDiff
	(*BaseRequest)(nil),           // 2: fitSphere.meal_plan.BaseRequest
	(*BaseResponse)(nil),          // 3: fitSphere.meal_plan.BaseResponse
	(*GetMealPlanReq)(nil),        // 4: fitSphere.meal_plan.GetMealPlanReq
	(*GetMealPlanRes)(nil),        // 5: fitSphere.meal_plan.GetMealPlanRes
	(*GetMealPlansReq)(nil),       // 6: fitSphere.meal_plan.GetMealPlansReq
	(*GetMealPlansRes)(nil),       // 7: fitSphere.meal_plan.GetMealPlansRes
	(*MealPlanSummary)(nil),       // 8: fitSphere.meal_plan.MealPlanSummary
	(*CreateMealPlanReq)(nil),     // 9: fitSphere.meal_plan.CreateMealPlanReq
	(*CreateMealPlanRes)(nil),     // 10: fitSphere.meal_plan.CreateMealPlanRes
	(*UpdateMealPlanReq)(nil),     // 11: fitSphere.meal_plan.UpdateMealPlanReq
	(*UpdateMealPlanRes)(nil),     // 12: fitSphere.meal_plan.UpdateMealPlanRes
	(*DeleteMealPlanReq)(nil),     // 13: fitSphere.meal_plan.DeleteMealPlanReq
	(*AddIngredientReq)(nil),      // 14: fitSphere.meal_plan.AddIngredientReq
	(*RemoveIngredientReq)(nil),   // 15: fitSphere.meal_plan.RemoveIngredientReq
	(*GetIngredientsReq)(nil),     // 16: fitSphere.meal_plan.GetIngredientsReq
	(*GetIngredientsRes)(nil),     // 17: fitSphere.meal_plan.GetIngredientsRes
	(*GetIngredientReq)(nil),      // 18: fitSphere.meal_plan.GetIngredientReq
	(*GetIngredientRes)(nil),      // 19: fitSphere.meal_plan.GetIngredientRes
	(*CreateIngredientReq)(nil),   // 20: fitSphere.meal_plan.CreateIngredientReq
	(*CreateIngredientRes)(nil),   // 21: fitSphere.meal_plan.CreateIngredientRes
	(*UpdateIngredientReq)(nil),   // 22: fitSphere.meal_plan.UpdateIngredientReq
	(*UpdateIngredientRes)(nil),   // 23: fitSphere.meal_plan.UpdateIngredientRes
	(*DeleteIngredientReq)(nil),   // 24: fitSphere.meal_plan.DeleteIngredientReq
	(*XIngredient)(nil),           // 25: fitSphere.meal_plan.XIngredient
	(*XMealPlan)(nil),             // 26: fitSphere.meal_plan.XMealPlan
	(*timestamppb.Timestamp)(nil), // 27: google.protobuf.Timestamp
}
var file_meal_proto_depIdxs = []int32{
	2,  // 0: fitSphere.meal_plan.GetMealPlanReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	25, // 1: fitSphere.meal_plan.GetMealPlanRes.ingredients:type_name -> fitSphere.meal_plan.XIngredient
	27, // 2: fitSphere.meal_plan.GetMealPlanRes.created_at:type_name -> google.protobuf.Timestamp
	27, // 3: fitSphere.meal_plan.GetMealPlanRes.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 4: fitSphere.meal_plan.GetMealPlanRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 5: fitSphere.meal_plan.GetMealPlansReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	8,  // 6: fitSphere.meal_plan.GetMealPlansRes.meal_plans:type_name -> fitSphere.meal_plan.MealPlanSummary
	3,  // 7: fitSphere.meal_plan.GetMealPlansRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 8: fitSphere.meal_plan.CreateMealPlanReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	3,  // 9: fitSphere.meal_plan.CreateMealPlanRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	1,  // 10: fitSphere.meal_plan.UpdateMealPlanReq.updates:type_name -> fitSphere.meal_plan.XDiff
	2,  // 11: fitSphere.meal_plan.UpdateMealPlanReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	26, // 12: fitSphere.meal_plan.UpdateMealPlanRes.meal_plan:type_name -> fitSphere.meal_plan.XMealPlan
	3,  // 13: fitSphere.meal_plan.UpdateMealPlanRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 14: fitSphere.meal_plan.DeleteMealPlanReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	2,  // 15: fitSphere.meal_plan.AddIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	2,  // 16: fitSphere.meal_plan.RemoveIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	2,  // 17: fitSphere.meal_plan.GetIngredientsReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	25, // 18: fitSphere.meal_plan.GetIngredientsRes.ingredients:type_name -> fitSphere.meal_plan.XIngredient
	3,  // 19: fitSphere.meal_plan.GetIngredientsRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 20: fitSphere.meal_plan.GetIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	25, // 21: fitSphere.meal_plan.GetIngredientRes.ingredient:type_name -> fitSphere.meal_plan.XIngredient
	3,  // 22: fitSphere.meal_plan.GetIngredientRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 23: fitSphere.meal_plan.CreateIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	3,  // 24: fitSphere.meal_plan.CreateIngredientRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	1,  // 25: fitSphere.meal_plan.UpdateIngredientReq.updates:type_name -> fitSphere.meal_plan.XDiff
	2,  // 26: fitSphere.meal_plan.UpdateIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	25, // 27: fitSphere.meal_plan.UpdateIngredientRes.ingredient:type_name -> fitSphere.meal_plan.XIngredient
	3,  // 28: fitSphere.meal_plan.UpdateIngredientRes.response:type_name -> fitSphere.meal_plan.BaseResponse
	2,  // 29: fitSphere.meal_plan.DeleteIngredientReq.request:type_name -> fitSphere.meal_plan.BaseRequest
	27, // 30: fitSphere.meal_plan.XIngredient.created_at:type_name -> google.protobuf.Timestamp
	27, // 31: fitSphere.meal_plan.XIngredient.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 32: fitSphere.meal_plan.MealPlan.GetMealPlan:input_type -> fitSphere.meal_plan.GetMealPlanReq
	6,  // 33: fitSphere.meal_plan.MealPlan.GetMealPlans:input_type -> fitSphere.meal_plan.GetMealPlansReq
	9,  // 34: fitSphere.meal_plan.MealPlan.CreateMealPlan:input_type -> fitSphere.meal_plan.CreateMealPlanReq
	11, // 35: fitSphere.meal_plan.MealPlan.UpdateMealPlan:input_type -> fitSphere.meal_plan.UpdateMealPlanReq
	13, // 36: fitSphere.meal_plan.MealPlan.DeleteMealPlan:input_type -> fitSphere.meal_plan.DeleteMealPlanReq
	14, // 37: fitSphere.meal_plan.MealPlan.AddIngredientToMealPlan:input_type -> fitSphere.meal_plan.AddIngredientReq
	15, // 38: fitSphere.meal_plan.MealPlan.RemoveIngredientFromMealPlan:input_type -> fitSphere.meal_plan.RemoveIngredientReq
	16, // 39: fitSphere.meal_plan.Ingredients.GetIngredients:input_type -> fitSphere.meal_plan.GetIngredientsReq
	18, // 40: fitSphere.meal_plan.Ingredients.GetIngredient:input_type -> fitSphere.meal_plan.GetIngredientReq
	20, // 41: fitSphere.meal_plan.Ingredients.CreateIngredient:input_type -> fitSphere.meal_plan.CreateIngredientReq
	22, // 42: fitSphere.meal_plan.Ingredients.UpdateIngredient:input_type -> fitSphere.meal_plan.UpdateIngredientReq
	24, // 43: fitSphere.meal_plan.Ingredients.DeleteIngredient:input_type -> fitSphere.meal_plan.DeleteIngredientReq
	5,  // 44: fitSphere.meal_plan.MealPlan.GetMealPlan:output_type -> fitSphere.meal_plan.GetMealPlanRes
	7,  // 45: fitSphere.meal_plan.MealPlan.GetMealPlans:output_type -> fitSphere.meal_plan.GetMealPlansRes
	10, // 46: fitSphere.meal_plan.MealPlan.CreateMealPlan:output_type -> fitSphere.meal_plan.CreateMealPlanRes
	12, // 47: fitSphere.meal_plan.MealPlan.UpdateMealPlan:output_type -> fitSphere.meal_plan.UpdateMealPlanRes
	0,  // 48: fitSphere.meal_plan.MealPlan.DeleteMealPlan:output_type -> fitSphere.meal_plan.NilRes
	0,  // 49: fitSphere.meal_plan.MealPlan.AddIngredientToMealPlan:output_type -> fitSphere.meal_plan.NilRes
	0,  // 50: fitSphere.meal_plan.MealPlan.RemoveIngredientFromMealPlan:output_type -> fitSphere.meal_plan.NilRes
	17, // 51: fitSphere.meal_plan.Ingredients.GetIngredients:output_type -> fitSphere.meal_plan.GetIngredientsRes
	19, // 52: fitSphere.meal_plan.Ingredients.GetIngredient:output_type -> fitSphere.meal_plan.GetIngredientRes
	21, // 53: fitSphere.meal_plan.Ingredients.CreateIngredient:output_type -> fitSphere.meal_plan.CreateIngredientRes
	23, // 54: fitSphere.meal_plan.Ingredients.UpdateIngredient:output_type -> fitSphere.meal_plan.UpdateIngredientRes
	0,  // 55: fitSphere.meal_plan.Ingredients.DeleteIngredient:output_type -> fitSphere.meal_plan.NilRes
	44, // [44:56] is the sub-list for method output_type
	32, // [32:44] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_meal_proto_init() }
func file_meal_proto_init() {
	if File_meal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meal_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NilRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*XDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetMealPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetMealPlanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetMealPlansReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMealPlansRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MealPlanSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMealPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMealPlanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMealPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMealPlanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMealPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AddIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetIngredientsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetIngredientsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetIngredientRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CreateIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CreateIngredientRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateIngredientRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteIngredientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*XIngredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meal_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*XMealPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_meal_proto_goTypes,
		DependencyIndexes: file_meal_proto_depIdxs,
		MessageInfos:      file_meal_proto_msgTypes,
	}.Build()
	File_meal_proto = out.File
	file_meal_proto_rawDesc = nil
	file_meal_proto_goTypes = nil
	file_meal_proto_depIdxs = nil
}
