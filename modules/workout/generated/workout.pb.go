// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: workout.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileFormat int32

const (
	FileFormat_FILE_FORMAT_UNSPECIFIED FileFormat = 0
	FileFormat_CSV                     FileFormat = 1
	FileFormat_EXCEL                   FileFormat = 2
	FileFormat_PDF                     FileFormat = 3
)

// Enum value maps for FileFormat.
var (
	FileFormat_name = map[int32]string{
		0: "FILE_FORMAT_UNSPECIFIED",
		1: "CSV",
		2: "EXCEL",
		3: "PDF",
	}
	FileFormat_value = map[string]int32{
		"FILE_FORMAT_UNSPECIFIED": 0,
		"CSV":                     1,
		"EXCEL":                   2,
		"PDF":                     3,
	}
)

func (x FileFormat) Enum() *FileFormat {
	p := new(FileFormat)
	*p = x
	return p
}

func (x FileFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_workout_proto_enumTypes[0].Descriptor()
}

func (FileFormat) Type() protoreflect.EnumType {
	return &file_workout_proto_enumTypes[0]
}

func (x FileFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileFormat.Descriptor instead.
func (FileFormat) EnumDescriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{0}
}

type GetExercisesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExercisesReq) Reset() {
	*x = GetExercisesReq{}
	mi := &file_workout_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExercisesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExercisesReq) ProtoMessage() {}

func (x *GetExercisesReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExercisesReq.ProtoReflect.Descriptor instead.
func (*GetExercisesReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{0}
}

func (x *GetExercisesReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetExercisesRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exercise      []*XExercises          `protobuf:"bytes,3,rep,name=exercise,proto3" json:"exercise,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExercisesRes) Reset() {
	*x = GetExercisesRes{}
	mi := &file_workout_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExercisesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExercisesRes) ProtoMessage() {}

func (x *GetExercisesRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExercisesRes.ProtoReflect.Descriptor instead.
func (*GetExercisesRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{1}
}

func (x *GetExercisesRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetExercisesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetExercisesRes) GetExercise() []*XExercises {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *GetExercisesRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetExerciseIDReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    string                 `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExerciseIDReq) Reset() {
	*x = GetExerciseIDReq{}
	mi := &file_workout_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseIDReq) ProtoMessage() {}

func (x *GetExerciseIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseIDReq.ProtoReflect.Descriptor instead.
func (*GetExerciseIDReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{2}
}

func (x *GetExerciseIDReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *GetExerciseIDReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetExerciseIDRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exercise      *XExercises            `protobuf:"bytes,3,opt,name=exercise,proto3" json:"exercise,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExerciseIDRes) Reset() {
	*x = GetExerciseIDRes{}
	mi := &file_workout_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseIDRes) ProtoMessage() {}

func (x *GetExerciseIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseIDRes.ProtoReflect.Descriptor instead.
func (*GetExerciseIDRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{3}
}

func (x *GetExerciseIDRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetExerciseIDRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetExerciseIDRes) GetExercise() *XExercises {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *GetExerciseIDRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateExerciseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exercise      *XExercises            `protobuf:"bytes,1,opt,name=exercise,proto3" json:"exercise,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExerciseReq) Reset() {
	*x = CreateExerciseReq{}
	mi := &file_workout_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExerciseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseReq) ProtoMessage() {}

func (x *CreateExerciseReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseReq.ProtoReflect.Descriptor instead.
func (*CreateExerciseReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{4}
}

func (x *CreateExerciseReq) GetExercise() *XExercises {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *CreateExerciseReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateExerciseReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateExerciseRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exercise      *XExercises            `protobuf:"bytes,3,opt,name=exercise,proto3" json:"exercise,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExerciseRes) Reset() {
	*x = CreateExerciseRes{}
	mi := &file_workout_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExerciseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseRes) ProtoMessage() {}

func (x *CreateExerciseRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseRes.ProtoReflect.Descriptor instead.
func (*CreateExerciseRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{5}
}

func (x *CreateExerciseRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateExerciseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateExerciseRes) GetExercise() *XExercises {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *CreateExerciseRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateExerciseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    string                 `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseReq) Reset() {
	*x = UpdateExerciseReq{}
	mi := &file_workout_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseReq) ProtoMessage() {}

func (x *UpdateExerciseReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseReq.ProtoReflect.Descriptor instead.
func (*UpdateExerciseReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateExerciseReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *UpdateExerciseReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateExerciseReq) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteExerciseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    string                 `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseReq) Reset() {
	*x = DeleteExerciseReq{}
	mi := &file_workout_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseReq) ProtoMessage() {}

func (x *DeleteExerciseReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseReq.ProtoReflect.Descriptor instead.
func (*DeleteExerciseReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteExerciseReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *DeleteExerciseReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkoutPlanExercisesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkoutPlanExercisesReq) Reset() {
	*x = GetWorkoutPlanExercisesReq{}
	mi := &file_workout_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlanExercisesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlanExercisesReq) ProtoMessage() {}

func (x *GetWorkoutPlanExercisesReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlanExercisesReq.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlanExercisesReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{8}
}

func (x *GetWorkoutPlanExercisesReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkoutPlanExercisesRes struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Success            bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkoutExerciseDay []*XWorkoutExerciseDay `protobuf:"bytes,3,rep,name=workout_exercise_day,json=workoutExerciseDay,proto3" json:"workout_exercise_day,omitempty"`
	Response           *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetWorkoutPlanExercisesRes) Reset() {
	*x = GetWorkoutPlanExercisesRes{}
	mi := &file_workout_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlanExercisesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlanExercisesRes) ProtoMessage() {}

func (x *GetWorkoutPlanExercisesRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlanExercisesRes.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlanExercisesRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{9}
}

func (x *GetWorkoutPlanExercisesRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWorkoutPlanExercisesRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWorkoutPlanExercisesRes) GetWorkoutExerciseDay() []*XWorkoutExerciseDay {
	if x != nil {
		return x.WorkoutExerciseDay
	}
	return nil
}

func (x *GetWorkoutPlanExercisesRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetExerciseByIdWorkoutPlanReq struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ExerciseWorkoutPlan string                 `protobuf:"bytes,1,opt,name=exercise_workout_plan,json=exerciseWorkoutPlan,proto3" json:"exercise_workout_plan,omitempty"`
	Request             *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetExerciseByIdWorkoutPlanReq) Reset() {
	*x = GetExerciseByIdWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseByIdWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseByIdWorkoutPlanReq) ProtoMessage() {}

func (x *GetExerciseByIdWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseByIdWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*GetExerciseByIdWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{10}
}

func (x *GetExerciseByIdWorkoutPlanReq) GetExerciseWorkoutPlan() string {
	if x != nil {
		return x.ExerciseWorkoutPlan
	}
	return ""
}

func (x *GetExerciseByIdWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetExerciseByIdWorkoutPlanRes struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Success            bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkoutExerciseDay *XWorkoutExerciseDay   `protobuf:"bytes,3,opt,name=workout_exercise_day,json=workoutExerciseDay,proto3" json:"workout_exercise_day,omitempty"`
	Response           *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetExerciseByIdWorkoutPlanRes) Reset() {
	*x = GetExerciseByIdWorkoutPlanRes{}
	mi := &file_workout_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseByIdWorkoutPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseByIdWorkoutPlanRes) ProtoMessage() {}

func (x *GetExerciseByIdWorkoutPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseByIdWorkoutPlanRes.ProtoReflect.Descriptor instead.
func (*GetExerciseByIdWorkoutPlanRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{11}
}

func (x *GetExerciseByIdWorkoutPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetExerciseByIdWorkoutPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetExerciseByIdWorkoutPlanRes) GetWorkoutExerciseDay() *XWorkoutExerciseDay {
	if x != nil {
		return x.WorkoutExerciseDay
	}
	return nil
}

func (x *GetExerciseByIdWorkoutPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteExerciseByIdWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    []string               `protobuf:"bytes,1,rep,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	WorkoutPlanId string                 `protobuf:"bytes,2,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Day           string                 `protobuf:"bytes,3,opt,name=day,proto3" json:"day,omitempty"`
	HardDelete    bool                   `protobuf:"varint,4,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseByIdWorkoutPlanReq) Reset() {
	*x = DeleteExerciseByIdWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseByIdWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseByIdWorkoutPlanReq) ProtoMessage() {}

func (x *DeleteExerciseByIdWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseByIdWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteExerciseByIdWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteExerciseByIdWorkoutPlanReq) GetExerciseId() []string {
	if x != nil {
		return x.ExerciseId
	}
	return nil
}

func (x *DeleteExerciseByIdWorkoutPlanReq) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *DeleteExerciseByIdWorkoutPlanReq) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *DeleteExerciseByIdWorkoutPlanReq) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

func (x *DeleteExerciseByIdWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateExerciseByIdWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutPlanId string                 `protobuf:"bytes,1,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseByIdWorkoutPlanReq) Reset() {
	*x = UpdateExerciseByIdWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseByIdWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseByIdWorkoutPlanReq) ProtoMessage() {}

func (x *UpdateExerciseByIdWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseByIdWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateExerciseByIdWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateExerciseByIdWorkoutPlanReq) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *UpdateExerciseByIdWorkoutPlanReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateExerciseByIdWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateExerciseByIdWorkoutPlanRes struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Success            bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkoutExerciseDay *XWorkoutExerciseDay   `protobuf:"bytes,3,opt,name=workout_exercise_day,json=workoutExerciseDay,proto3" json:"workout_exercise_day,omitempty"`
	Response           *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateExerciseByIdWorkoutPlanRes) Reset() {
	*x = UpdateExerciseByIdWorkoutPlanRes{}
	mi := &file_workout_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseByIdWorkoutPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseByIdWorkoutPlanRes) ProtoMessage() {}

func (x *UpdateExerciseByIdWorkoutPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseByIdWorkoutPlanRes.ProtoReflect.Descriptor instead.
func (*UpdateExerciseByIdWorkoutPlanRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateExerciseByIdWorkoutPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateExerciseByIdWorkoutPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateExerciseByIdWorkoutPlanRes) GetWorkoutExerciseDay() *XWorkoutExerciseDay {
	if x != nil {
		return x.WorkoutExerciseDay
	}
	return nil
}

func (x *UpdateExerciseByIdWorkoutPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type InsertExerciseWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutDay    string                 `protobuf:"bytes,1,opt,name=workout_day,json=workoutDay,proto3" json:"workout_day,omitempty"`
	WorkoutPlanId string                 `protobuf:"bytes,2,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	ExerciseId    string                 `protobuf:"bytes,3,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertExerciseWorkoutPlanReq) Reset() {
	*x = InsertExerciseWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertExerciseWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertExerciseWorkoutPlanReq) ProtoMessage() {}

func (x *InsertExerciseWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertExerciseWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*InsertExerciseWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{15}
}

func (x *InsertExerciseWorkoutPlanReq) GetWorkoutDay() string {
	if x != nil {
		return x.WorkoutDay
	}
	return ""
}

func (x *InsertExerciseWorkoutPlanReq) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *InsertExerciseWorkoutPlanReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *InsertExerciseWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkoutPlansReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkoutPlansReq) Reset() {
	*x = GetWorkoutPlansReq{}
	mi := &file_workout_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlansReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlansReq) ProtoMessage() {}

func (x *GetWorkoutPlansReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlansReq.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlansReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{16}
}

func (x *GetWorkoutPlansReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkoutPlansRes struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Success       bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkoutPlan   []*XWorkoutPlanResponse `protobuf:"bytes,3,rep,name=workout_plan,json=workoutPlan,proto3" json:"workout_plan,omitempty"`
	Response      *BaseResponse           `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkoutPlansRes) Reset() {
	*x = GetWorkoutPlansRes{}
	mi := &file_workout_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlansRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlansRes) ProtoMessage() {}

func (x *GetWorkoutPlansRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlansRes.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlansRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{17}
}

func (x *GetWorkoutPlansRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWorkoutPlansRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWorkoutPlansRes) GetWorkoutPlan() []*XWorkoutPlanResponse {
	if x != nil {
		return x.WorkoutPlan
	}
	return nil
}

func (x *GetWorkoutPlansRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutPlanId string                 `protobuf:"bytes,1,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkoutPlanReq) Reset() {
	*x = GetWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlanReq) ProtoMessage() {}

func (x *GetWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{18}
}

func (x *GetWorkoutPlanReq) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *GetWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkoutPlanRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WorkoutPlan   *XWorkoutPlanResponse  `protobuf:"bytes,3,opt,name=workout_plan,json=workoutPlan,proto3" json:"workout_plan,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkoutPlanRes) Reset() {
	*x = GetWorkoutPlanRes{}
	mi := &file_workout_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkoutPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkoutPlanRes) ProtoMessage() {}

func (x *GetWorkoutPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkoutPlanRes.ProtoReflect.Descriptor instead.
func (*GetWorkoutPlanRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{19}
}

func (x *GetWorkoutPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetWorkoutPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWorkoutPlanRes) GetWorkoutPlan() *XWorkoutPlanResponse {
	if x != nil {
		return x.WorkoutPlan
	}
	return nil
}

func (x *GetWorkoutPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type InsertWorkoutPlanRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Workout       *XWorkoutPlan          `protobuf:"bytes,3,opt,name=workout,proto3" json:"workout,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertWorkoutPlanRes) Reset() {
	*x = InsertWorkoutPlanRes{}
	mi := &file_workout_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertWorkoutPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertWorkoutPlanRes) ProtoMessage() {}

func (x *InsertWorkoutPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertWorkoutPlanRes.ProtoReflect.Descriptor instead.
func (*InsertWorkoutPlanRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{20}
}

func (x *InsertWorkoutPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertWorkoutPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InsertWorkoutPlanRes) GetWorkout() *XWorkoutPlan {
	if x != nil {
		return x.Workout
	}
	return nil
}

func (x *InsertWorkoutPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateExerciseRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exercise      *XExercises            `protobuf:"bytes,3,opt,name=exercise,proto3" json:"exercise,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseRes) Reset() {
	*x = UpdateExerciseRes{}
	mi := &file_workout_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseRes) ProtoMessage() {}

func (x *UpdateExerciseRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseRes.ProtoReflect.Descriptor instead.
func (*UpdateExerciseRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateExerciseRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateExerciseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateExerciseRes) GetExercise() *XExercises {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *UpdateExerciseRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutId     string                 `protobuf:"bytes,1,opt,name=workout_id,json=workoutId,proto3" json:"workout_id,omitempty"`
	Updates       []*XDiff               `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkoutPlanReq) Reset() {
	*x = UpdateWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkoutPlanReq) ProtoMessage() {}

func (x *UpdateWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateWorkoutPlanReq) GetWorkoutId() string {
	if x != nil {
		return x.WorkoutId
	}
	return ""
}

func (x *UpdateWorkoutPlanReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWorkoutPlanRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Workout       *XWorkoutPlan          `protobuf:"bytes,3,opt,name=workout,proto3" json:"workout,omitempty"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkoutPlanRes) Reset() {
	*x = UpdateWorkoutPlanRes{}
	mi := &file_workout_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkoutPlanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkoutPlanRes) ProtoMessage() {}

func (x *UpdateWorkoutPlanRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkoutPlanRes.ProtoReflect.Descriptor instead.
func (*UpdateWorkoutPlanRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateWorkoutPlanRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateWorkoutPlanRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateWorkoutPlanRes) GetWorkout() *XWorkoutPlan {
	if x != nil {
		return x.Workout
	}
	return nil
}

func (x *UpdateWorkoutPlanRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteWorkoutPlanReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WorkoutPlanId string                 `protobuf:"bytes,2,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	HardDelete    bool                   `protobuf:"varint,3,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"` // soft delete by default or change later
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkoutPlanReq) Reset() {
	*x = DeleteWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkoutPlanReq) ProtoMessage() {}

func (x *DeleteWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteWorkoutPlanReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteWorkoutPlanReq) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *DeleteWorkoutPlanReq) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

func (x *DeleteWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type NilRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NilRes) Reset() {
	*x = NilRes{}
	mi := &file_workout_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRes) ProtoMessage() {}

func (x *NilRes) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRes.ProtoReflect.Descriptor instead.
func (*NilRes) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{25}
}

type XDiff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	OldValue      string                 `protobuf:"bytes,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue      string                 `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XDiff) Reset() {
	*x = XDiff{}
	mi := &file_workout_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDiff) ProtoMessage() {}

func (x *XDiff) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDiff.ProtoReflect.Descriptor instead.
func (*XDiff) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{26}
}

func (x *XDiff) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *XDiff) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *XDiff) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

type XWorkoutPlan struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkoutId      string                 `protobuf:"bytes,1,opt,name=workout_id,json=workoutId,proto3" json:"workout_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Notes          string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Rating         uint32                 `protobuf:"varint,7,opt,name=rating,proto3" json:"rating,omitempty"`
	WorkoutPlanDay []*XWorkoutPlanDay     `protobuf:"bytes,8,rep,name=workout_plan_day,json=workoutPlanDay,proto3" json:"workout_plan_day,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *XWorkoutPlan) Reset() {
	*x = XWorkoutPlan{}
	mi := &file_workout_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutPlan) ProtoMessage() {}

func (x *XWorkoutPlan) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutPlan.ProtoReflect.Descriptor instead.
func (*XWorkoutPlan) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{27}
}

func (x *XWorkoutPlan) GetWorkoutId() string {
	if x != nil {
		return x.WorkoutId
	}
	return ""
}

func (x *XWorkoutPlan) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XWorkoutPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *XWorkoutPlan) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *XWorkoutPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWorkoutPlan) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *XWorkoutPlan) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *XWorkoutPlan) GetWorkoutPlanDay() []*XWorkoutPlanDay {
	if x != nil {
		return x.WorkoutPlanDay
	}
	return nil
}

type XWorkoutPlanDay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           string                 `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	ExerciseType  string                 `protobuf:"bytes,2,opt,name=exercise_type,json=exerciseType,proto3" json:"exercise_type,omitempty"`
	Exercises     []*XExercises          `protobuf:"bytes,3,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWorkoutPlanDay) Reset() {
	*x = XWorkoutPlanDay{}
	mi := &file_workout_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutPlanDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutPlanDay) ProtoMessage() {}

func (x *XWorkoutPlanDay) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutPlanDay.ProtoReflect.Descriptor instead.
func (*XWorkoutPlanDay) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{28}
}

func (x *XWorkoutPlanDay) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *XWorkoutPlanDay) GetExerciseType() string {
	if x != nil {
		return x.ExerciseType
	}
	return ""
}

func (x *XWorkoutPlanDay) GetExercises() []*XExercises {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type XExercises struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    string                 `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExerciseType  string                 `protobuf:"bytes,3,opt,name=exercise_type,json=exerciseType,proto3" json:"exercise_type,omitempty"`
	MuscleGroup   string                 `protobuf:"bytes,4,opt,name=muscle_group,json=muscleGroup,proto3" json:"muscle_group,omitempty"`
	Equipment     string                 `protobuf:"bytes,5,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Difficulty    string                 `protobuf:"bytes,6,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Instruction   string                 `protobuf:"bytes,7,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Video         string                 `protobuf:"bytes,8,opt,name=video,proto3" json:"video,omitempty"`
	CustomCreated bool                   `protobuf:"varint,9,opt,name=custom_created,json=customCreated,proto3" json:"custom_created,omitempty"`
	Series        uint32                 `protobuf:"varint,10,opt,name=series,proto3" json:"series,omitempty"`
	Repetitions   string                 `protobuf:"bytes,11,opt,name=repetitions,proto3" json:"repetitions,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XExercises) Reset() {
	*x = XExercises{}
	mi := &file_workout_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XExercises) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XExercises) ProtoMessage() {}

func (x *XExercises) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XExercises.ProtoReflect.Descriptor instead.
func (*XExercises) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{29}
}

func (x *XExercises) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *XExercises) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XExercises) GetExerciseType() string {
	if x != nil {
		return x.ExerciseType
	}
	return ""
}

func (x *XExercises) GetMuscleGroup() string {
	if x != nil {
		return x.MuscleGroup
	}
	return ""
}

func (x *XExercises) GetEquipment() string {
	if x != nil {
		return x.Equipment
	}
	return ""
}

func (x *XExercises) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *XExercises) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *XExercises) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *XExercises) GetCustomCreated() bool {
	if x != nil {
		return x.CustomCreated
	}
	return false
}

func (x *XExercises) GetSeries() uint32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *XExercises) GetRepetitions() string {
	if x != nil {
		return x.Repetitions
	}
	return ""
}

func (x *XExercises) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XExercises) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type XWorkoutExerciseDay struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	WorkoutExerciseDay string                 `protobuf:"bytes,1,opt,name=workout_exercise_day,json=workoutExerciseDay,proto3" json:"workout_exercise_day,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExerciseType       string                 `protobuf:"bytes,3,opt,name=exercise_type,json=exerciseType,proto3" json:"exercise_type,omitempty"`
	MuscleGroup        string                 `protobuf:"bytes,4,opt,name=muscle_group,json=muscleGroup,proto3" json:"muscle_group,omitempty"`
	Equipment          string                 `protobuf:"bytes,5,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Difficulty         string                 `protobuf:"bytes,6,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Instruction        string                 `protobuf:"bytes,7,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Video              string                 `protobuf:"bytes,8,opt,name=video,proto3" json:"video,omitempty"`
	CustomCreated      bool                   `protobuf:"varint,9,opt,name=custom_created,json=customCreated,proto3" json:"custom_created,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Day                string                 `protobuf:"bytes,12,opt,name=day,proto3" json:"day,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *XWorkoutExerciseDay) Reset() {
	*x = XWorkoutExerciseDay{}
	mi := &file_workout_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutExerciseDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutExerciseDay) ProtoMessage() {}

func (x *XWorkoutExerciseDay) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutExerciseDay.ProtoReflect.Descriptor instead.
func (*XWorkoutExerciseDay) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{30}
}

func (x *XWorkoutExerciseDay) GetWorkoutExerciseDay() string {
	if x != nil {
		return x.WorkoutExerciseDay
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetExerciseType() string {
	if x != nil {
		return x.ExerciseType
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetMuscleGroup() string {
	if x != nil {
		return x.MuscleGroup
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetEquipment() string {
	if x != nil {
		return x.Equipment
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *XWorkoutExerciseDay) GetCustomCreated() bool {
	if x != nil {
		return x.CustomCreated
	}
	return false
}

func (x *XWorkoutExerciseDay) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWorkoutExerciseDay) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *XWorkoutExerciseDay) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

type XWorkoutPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutPlanId string                 `protobuf:"bytes,1,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	WorkoutDay    []*WorkoutDayResponse  `protobuf:"bytes,4,rep,name=workout_day,json=workoutDay,proto3" json:"workout_day,omitempty"`
	Notes         string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Rating        uint32                 `protobuf:"varint,8,opt,name=rating,proto3" json:"rating,omitempty"`
	Day           string                 `protobuf:"bytes,9,opt,name=day,proto3" json:"day,omitempty"`
	Exercises     []string               `protobuf:"bytes,10,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWorkoutPlanResponse) Reset() {
	*x = XWorkoutPlanResponse{}
	mi := &file_workout_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutPlanResponse) ProtoMessage() {}

func (x *XWorkoutPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutPlanResponse.ProtoReflect.Descriptor instead.
func (*XWorkoutPlanResponse) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{31}
}

func (x *XWorkoutPlanResponse) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *XWorkoutPlanResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XWorkoutPlanResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *XWorkoutPlanResponse) GetWorkoutDay() []*WorkoutDayResponse {
	if x != nil {
		return x.WorkoutDay
	}
	return nil
}

func (x *XWorkoutPlanResponse) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *XWorkoutPlanResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWorkoutPlanResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *XWorkoutPlanResponse) GetRating() uint32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *XWorkoutPlanResponse) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *XWorkoutPlanResponse) GetExercises() []string {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type BaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Downstream    string                 `protobuf:"bytes,998,opt,name=downstream,proto3" json:"downstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	mi := &file_workout_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{32}
}

func (x *BaseRequest) GetDownstream() string {
	if x != nil {
		return x.Downstream
	}
	return ""
}

func (x *BaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type InsertWorkoutPlanReq struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Workout *XWorkoutPlan          `protobuf:"bytes,1,opt,name=workout,proto3" json:"workout,omitempty"`
	// repeated XPlanDay plan_day = 2;
	UserId        string       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Request       *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertWorkoutPlanReq) Reset() {
	*x = InsertWorkoutPlanReq{}
	mi := &file_workout_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertWorkoutPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertWorkoutPlanReq) ProtoMessage() {}

func (x *InsertWorkoutPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertWorkoutPlanReq.ProtoReflect.Descriptor instead.
func (*InsertWorkoutPlanReq) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{33}
}

func (x *InsertWorkoutPlanReq) GetWorkout() *XWorkoutPlan {
	if x != nil {
		return x.Workout
	}
	return nil
}

func (x *InsertWorkoutPlanReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InsertWorkoutPlanReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type BaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upstream      string                 `protobuf:"bytes,998,opt,name=upstream,proto3" json:"upstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status        string                 `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	mi := &file_workout_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{34}
}

func (x *BaseResponse) GetUpstream() string {
	if x != nil {
		return x.Upstream
	}
	return ""
}

func (x *BaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BaseResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WorkoutDayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           string                 `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	Exercises     []*XExercises          `protobuf:"bytes,2,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkoutDayResponse) Reset() {
	*x = WorkoutDayResponse{}
	mi := &file_workout_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkoutDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkoutDayResponse) ProtoMessage() {}

func (x *WorkoutDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkoutDayResponse.ProtoReflect.Descriptor instead.
func (*WorkoutDayResponse) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{35}
}

func (x *WorkoutDayResponse) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *WorkoutDayResponse) GetExercises() []*XExercises {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type XPlanDay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           string                 `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	ExerciseType  string                 `protobuf:"bytes,2,opt,name=exercise_type,json=exerciseType,proto3" json:"exercise_type,omitempty"`
	Exercises     []*XExerciseInput      `protobuf:"bytes,3,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XPlanDay) Reset() {
	*x = XPlanDay{}
	mi := &file_workout_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XPlanDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XPlanDay) ProtoMessage() {}

func (x *XPlanDay) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XPlanDay.ProtoReflect.Descriptor instead.
func (*XPlanDay) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{36}
}

func (x *XPlanDay) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *XPlanDay) GetExerciseType() string {
	if x != nil {
		return x.ExerciseType
	}
	return ""
}

func (x *XPlanDay) GetExercises() []*XExerciseInput {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type XWorkoutDay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutDayId  string                 `protobuf:"bytes,1,opt,name=workout_day_id,json=workoutDayId,proto3" json:"workout_day_id,omitempty"`
	WorkoutPlanId string                 `protobuf:"bytes,2,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Day           string                 `protobuf:"bytes,3,opt,name=day,proto3" json:"day,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Exercises     []*XExercises          `protobuf:"bytes,6,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XWorkoutDay) Reset() {
	*x = XWorkoutDay{}
	mi := &file_workout_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutDay) ProtoMessage() {}

func (x *XWorkoutDay) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutDay.ProtoReflect.Descriptor instead.
func (*XWorkoutDay) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{37}
}

func (x *XWorkoutDay) GetWorkoutDayId() string {
	if x != nil {
		return x.WorkoutDayId
	}
	return ""
}

func (x *XWorkoutDay) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *XWorkoutDay) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *XWorkoutDay) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *XWorkoutDay) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *XWorkoutDay) GetExercises() []*XExercises {
	if x != nil {
		return x.Exercises
	}
	return nil
}

type XWorkoutPlanDetail struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	WorkoutPlanDetailId string                 `protobuf:"bytes,1,opt,name=workout_plan_detail_id,json=workoutPlanDetailId,proto3" json:"workout_plan_detail_id,omitempty"`
	WorkoutPlanId       string                 `protobuf:"bytes,2,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Day                 string                 `protobuf:"bytes,3,opt,name=day,proto3" json:"day,omitempty"`
	Exercises           []string               `protobuf:"bytes,4,rep,name=exercises,proto3" json:"exercises,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *XWorkoutPlanDetail) Reset() {
	*x = XWorkoutPlanDetail{}
	mi := &file_workout_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XWorkoutPlanDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XWorkoutPlanDetail) ProtoMessage() {}

func (x *XWorkoutPlanDetail) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XWorkoutPlanDetail.ProtoReflect.Descriptor instead.
func (*XWorkoutPlanDetail) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{38}
}

func (x *XWorkoutPlanDetail) GetWorkoutPlanDetailId() string {
	if x != nil {
		return x.WorkoutPlanDetailId
	}
	return ""
}

func (x *XWorkoutPlanDetail) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *XWorkoutPlanDetail) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *XWorkoutPlanDetail) GetExercises() []string {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *XWorkoutPlanDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DownloadWorkoutPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkoutPlanId string                 `protobuf:"bytes,1,opt,name=workout_plan_id,json=workoutPlanId,proto3" json:"workout_plan_id,omitempty"`
	Format        FileFormat             `protobuf:"varint,2,opt,name=format,proto3,enum=fitSphere.workout.FileFormat" json:"format,omitempty"`
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadWorkoutPlanRequest) Reset() {
	*x = DownloadWorkoutPlanRequest{}
	mi := &file_workout_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadWorkoutPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadWorkoutPlanRequest) ProtoMessage() {}

func (x *DownloadWorkoutPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadWorkoutPlanRequest.ProtoReflect.Descriptor instead.
func (*DownloadWorkoutPlanRequest) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{39}
}

func (x *DownloadWorkoutPlanRequest) GetWorkoutPlanId() string {
	if x != nil {
		return x.WorkoutPlanId
	}
	return ""
}

func (x *DownloadWorkoutPlanRequest) GetFormat() FileFormat {
	if x != nil {
		return x.Format
	}
	return FileFormat_FILE_FORMAT_UNSPECIFIED
}

func (x *DownloadWorkoutPlanRequest) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type FileChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of this file chunk.
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// True only in the first chunk.
	IsFirstChunk bool `protobuf:"varint,2,opt,name=is_first_chunk,json=isFirstChunk,proto3" json:"is_first_chunk,omitempty"`
	// Optional metadata available only on the first chunk.
	FileName    string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ContentType string `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// "text/csv"
	// "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
	// "application/pdf"
	Response      *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_workout_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{40}
}

func (x *FileChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileChunk) GetIsFirstChunk() bool {
	if x != nil {
		return x.IsFirstChunk
	}
	return false
}

func (x *FileChunk) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileChunk) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileChunk) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type XExerciseInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    string                 `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExerciseType  string                 `protobuf:"bytes,3,opt,name=exercise_type,json=exerciseType,proto3" json:"exercise_type,omitempty"`
	MuscleGroup   string                 `protobuf:"bytes,4,opt,name=muscle_group,json=muscleGroup,proto3" json:"muscle_group,omitempty"`
	Equipment     string                 `protobuf:"bytes,5,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Difficulty    string                 `protobuf:"bytes,6,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Instruction   string                 `protobuf:"bytes,7,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Video         string                 `protobuf:"bytes,8,opt,name=video,proto3" json:"video,omitempty"`
	Repetitions   string                 `protobuf:"bytes,9,opt,name=repetitions,proto3" json:"repetitions,omitempty"`
	Series        uint32                 `protobuf:"varint,10,opt,name=series,proto3" json:"series,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XExerciseInput) Reset() {
	*x = XExerciseInput{}
	mi := &file_workout_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XExerciseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XExerciseInput) ProtoMessage() {}

func (x *XExerciseInput) ProtoReflect() protoreflect.Message {
	mi := &file_workout_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XExerciseInput.ProtoReflect.Descriptor instead.
func (*XExerciseInput) Descriptor() ([]byte, []int) {
	return file_workout_proto_rawDescGZIP(), []int{41}
}

func (x *XExerciseInput) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *XExerciseInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XExerciseInput) GetExerciseType() string {
	if x != nil {
		return x.ExerciseType
	}
	return ""
}

func (x *XExerciseInput) GetMuscleGroup() string {
	if x != nil {
		return x.MuscleGroup
	}
	return ""
}

func (x *XExerciseInput) GetEquipment() string {
	if x != nil {
		return x.Equipment
	}
	return ""
}

func (x *XExerciseInput) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *XExerciseInput) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *XExerciseInput) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *XExerciseInput) GetRepetitions() string {
	if x != nil {
		return x.Repetitions
	}
	return ""
}

func (x *XExerciseInput) GetSeries() uint32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *XExerciseInput) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_workout_proto protoreflect.FileDescriptor

const file_workout_proto_rawDesc = "" +
	"\n" +
	"\rworkout.proto\x12\x11fitSphere.workout\x1a\x1fgoogle/protobuf/timestamp.proto\"K\n" +
	"\x0fGetExercisesReq\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xbd\x01\n" +
	"\x0fGetExercisesRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\bexercise\x18\x03 \x03(\v2\x1d.fitSphere.workout.XExercisesR\bexercise\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"m\n" +
	"\x10GetExerciseIDReq\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\tR\n" +
	"exerciseId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xbe\x01\n" +
	"\x10GetExerciseIDRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\bexercise\x18\x03 \x01(\v2\x1d.fitSphere.workout.XExercisesR\bexercise\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xa1\x01\n" +
	"\x11CreateExerciseReq\x129\n" +
	"\bexercise\x18\x01 \x01(\v2\x1d.fitSphere.workout.XExercisesR\bexercise\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xbf\x01\n" +
	"\x11CreateExerciseRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\bexercise\x18\x03 \x01(\v2\x1d.fitSphere.workout.XExercisesR\bexercise\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xa5\x01\n" +
	"\x11UpdateExerciseReq\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\tR\n" +
	"exerciseId\x122\n" +
	"\aupdates\x18\x02 \x03(\v2\x18.fitSphere.workout.XDiffR\aupdates\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"n\n" +
	"\x11DeleteExerciseReq\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\tR\n" +
	"exerciseId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"V\n" +
	"\x1aGetWorkoutPlanExercisesReq\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xe7\x01\n" +
	"\x1aGetWorkoutPlanExercisesRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12X\n" +
	"\x14workout_exercise_day\x18\x03 \x03(\v2&.fitSphere.workout.XWorkoutExerciseDayR\x12workoutExerciseDay\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\x8d\x01\n" +
	"\x1dGetExerciseByIdWorkoutPlanReq\x122\n" +
	"\x15exercise_workout_plan\x18\x01 \x01(\tR\x13exerciseWorkoutPlan\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xea\x01\n" +
	"\x1dGetExerciseByIdWorkoutPlanRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12X\n" +
	"\x14workout_exercise_day\x18\x03 \x01(\v2&.fitSphere.workout.XWorkoutExerciseDayR\x12workoutExerciseDay\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xd8\x01\n" +
	" DeleteExerciseByIdWorkoutPlanReq\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x03(\tR\n" +
	"exerciseId\x12&\n" +
	"\x0fworkout_plan_id\x18\x02 \x01(\tR\rworkoutPlanId\x12\x10\n" +
	"\x03day\x18\x03 \x01(\tR\x03day\x12\x1f\n" +
	"\vhard_delete\x18\x04 \x01(\bR\n" +
	"hardDelete\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xb8\x01\n" +
	" UpdateExerciseByIdWorkoutPlanReq\x12&\n" +
	"\x0fworkout_plan_id\x18\x01 \x01(\tR\rworkoutPlanId\x122\n" +
	"\aupdates\x18\x02 \x03(\v2\x18.fitSphere.workout.XDiffR\aupdates\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xed\x01\n" +
	" UpdateExerciseByIdWorkoutPlanRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12X\n" +
	"\x14workout_exercise_day\x18\x03 \x01(\v2&.fitSphere.workout.XWorkoutExerciseDayR\x12workoutExerciseDay\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xc2\x01\n" +
	"\x1cInsertExerciseWorkoutPlanReq\x12\x1f\n" +
	"\vworkout_day\x18\x01 \x01(\tR\n" +
	"workoutDay\x12&\n" +
	"\x0fworkout_plan_id\x18\x02 \x01(\tR\rworkoutPlanId\x12\x1f\n" +
	"\vexercise_id\x18\x03 \x01(\tR\n" +
	"exerciseId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"N\n" +
	"\x12GetWorkoutPlansReq\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xd1\x01\n" +
	"\x12GetWorkoutPlansRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12J\n" +
	"\fworkout_plan\x18\x03 \x03(\v2'.fitSphere.workout.XWorkoutPlanResponseR\vworkoutPlan\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"u\n" +
	"\x11GetWorkoutPlanReq\x12&\n" +
	"\x0fworkout_plan_id\x18\x01 \x01(\tR\rworkoutPlanId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xd0\x01\n" +
	"\x11GetWorkoutPlanRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12J\n" +
	"\fworkout_plan\x18\x03 \x01(\v2'.fitSphere.workout.XWorkoutPlanResponseR\vworkoutPlan\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xc2\x01\n" +
	"\x14InsertWorkoutPlanRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\aworkout\x18\x03 \x01(\v2\x1f.fitSphere.workout.XWorkoutPlanR\aworkout\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xbf\x01\n" +
	"\x11UpdateExerciseRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\bexercise\x18\x03 \x01(\v2\x1d.fitSphere.workout.XExercisesR\bexercise\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xa3\x01\n" +
	"\x14UpdateWorkoutPlanReq\x12\x1d\n" +
	"\n" +
	"workout_id\x18\x01 \x01(\tR\tworkoutId\x122\n" +
	"\aupdates\x18\x02 \x03(\v2\x18.fitSphere.workout.XDiffR\aupdates\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xc2\x01\n" +
	"\x14UpdateWorkoutPlanRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\aworkout\x18\x03 \x01(\v2\x1f.fitSphere.workout.XWorkoutPlanR\aworkout\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xb2\x01\n" +
	"\x14DeleteWorkoutPlanReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12&\n" +
	"\x0fworkout_plan_id\x18\x02 \x01(\tR\rworkoutPlanId\x12\x1f\n" +
	"\vhard_delete\x18\x03 \x01(\bR\n" +
	"hardDelete\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\b\n" +
	"\x06NilRes\"W\n" +
	"\x05XDiff\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1b\n" +
	"\told_value\x18\x02 \x01(\tR\boldValue\x12\x1b\n" +
	"\tnew_value\x18\x03 \x01(\tR\bnewValue\"\xda\x02\n" +
	"\fXWorkoutPlan\x12\x1d\n" +
	"\n" +
	"workout_id\x18\x01 \x01(\tR\tworkoutId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x16\n" +
	"\x06rating\x18\a \x01(\rR\x06rating\x12L\n" +
	"\x10workout_plan_day\x18\b \x03(\v2\".fitSphere.workout.XWorkoutPlanDayR\x0eworkoutPlanDay\"\x85\x01\n" +
	"\x0fXWorkoutPlanDay\x12\x10\n" +
	"\x03day\x18\x01 \x01(\tR\x03day\x12#\n" +
	"\rexercise_type\x18\x02 \x01(\tR\fexerciseType\x12;\n" +
	"\texercises\x18\x03 \x03(\v2\x1d.fitSphere.workout.XExercisesR\texercises\"\xd6\x03\n" +
	"\n" +
	"XExercises\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\tR\n" +
	"exerciseId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12#\n" +
	"\rexercise_type\x18\x03 \x01(\tR\fexerciseType\x12!\n" +
	"\fmuscle_group\x18\x04 \x01(\tR\vmuscleGroup\x12\x1c\n" +
	"\tequipment\x18\x05 \x01(\tR\tequipment\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x06 \x01(\tR\n" +
	"difficulty\x12 \n" +
	"\vinstruction\x18\a \x01(\tR\vinstruction\x12\x14\n" +
	"\x05video\x18\b \x01(\tR\x05video\x12%\n" +
	"\x0ecustom_created\x18\t \x01(\bR\rcustomCreated\x12\x16\n" +
	"\x06series\x18\n" +
	" \x01(\rR\x06series\x12 \n" +
	"\vrepetitions\x18\v \x01(\tR\vrepetitions\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xc8\x03\n" +
	"\x13XWorkoutExerciseDay\x120\n" +
	"\x14workout_exercise_day\x18\x01 \x01(\tR\x12workoutExerciseDay\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12#\n" +
	"\rexercise_type\x18\x03 \x01(\tR\fexerciseType\x12!\n" +
	"\fmuscle_group\x18\x04 \x01(\tR\vmuscleGroup\x12\x1c\n" +
	"\tequipment\x18\x05 \x01(\tR\tequipment\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x06 \x01(\tR\n" +
	"difficulty\x12 \n" +
	"\vinstruction\x18\a \x01(\tR\vinstruction\x12\x14\n" +
	"\x05video\x18\b \x01(\tR\x05video\x12%\n" +
	"\x0ecustom_created\x18\t \x01(\bR\rcustomCreated\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x10\n" +
	"\x03day\x18\f \x01(\tR\x03day\"\x95\x03\n" +
	"\x14XWorkoutPlanResponse\x12&\n" +
	"\x0fworkout_plan_id\x18\x01 \x01(\tR\rworkoutPlanId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12F\n" +
	"\vworkout_day\x18\x04 \x03(\v2%.fitSphere.workout.WorkoutDayResponseR\n" +
	"workoutDay\x12\x14\n" +
	"\x05notes\x18\x05 \x01(\tR\x05notes\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x16\n" +
	"\x06rating\x18\b \x01(\rR\x06rating\x12\x10\n" +
	"\x03day\x18\t \x01(\tR\x03day\x12\x1c\n" +
	"\texercises\x18\n" +
	" \x03(\tR\texercises\"N\n" +
	"\vBaseRequest\x12\x1f\n" +
	"\n" +
	"downstream\x18\xe6\a \x01(\tR\n" +
	"downstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\"\xa4\x01\n" +
	"\x14InsertWorkoutPlanReq\x129\n" +
	"\aworkout\x18\x01 \x01(\v2\x1f.fitSphere.workout.XWorkoutPlanR\aworkout\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"d\n" +
	"\fBaseResponse\x12\x1b\n" +
	"\bupstream\x18\xe6\a \x01(\tR\bupstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\x12\x17\n" +
	"\x06status\x18\xe8\a \x01(\tR\x06status\"c\n" +
	"\x12WorkoutDayResponse\x12\x10\n" +
	"\x03day\x18\x01 \x01(\tR\x03day\x12;\n" +
	"\texercises\x18\x02 \x03(\v2\x1d.fitSphere.workout.XExercisesR\texercises\"\x82\x01\n" +
	"\bXPlanDay\x12\x10\n" +
	"\x03day\x18\x01 \x01(\tR\x03day\x12#\n" +
	"\rexercise_type\x18\x02 \x01(\tR\fexerciseType\x12?\n" +
	"\texercises\x18\x03 \x03(\v2!.fitSphere.workout.XExerciseInputR\texercises\"\xa0\x02\n" +
	"\vXWorkoutDay\x12$\n" +
	"\x0eworkout_day_id\x18\x01 \x01(\tR\fworkoutDayId\x12&\n" +
	"\x0fworkout_plan_id\x18\x02 \x01(\tR\rworkoutPlanId\x12\x10\n" +
	"\x03day\x18\x03 \x01(\tR\x03day\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12;\n" +
	"\texercises\x18\x06 \x03(\v2\x1d.fitSphere.workout.XExercisesR\texercises\"\xdc\x01\n" +
	"\x12XWorkoutPlanDetail\x123\n" +
	"\x16workout_plan_detail_id\x18\x01 \x01(\tR\x13workoutPlanDetailId\x12&\n" +
	"\x0fworkout_plan_id\x18\x02 \x01(\tR\rworkoutPlanId\x12\x10\n" +
	"\x03day\x18\x03 \x01(\tR\x03day\x12\x1c\n" +
	"\texercises\x18\x04 \x03(\tR\texercises\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xb5\x01\n" +
	"\x1aDownloadWorkoutPlanRequest\x12&\n" +
	"\x0fworkout_plan_id\x18\x01 \x01(\tR\rworkoutPlanId\x125\n" +
	"\x06format\x18\x02 \x01(\x0e2\x1d.fitSphere.workout.FileFormatR\x06format\x128\n" +
	"\arequest\x18d \x01(\v2\x1e.fitSphere.workout.BaseRequestR\arequest\"\xc8\x01\n" +
	"\tFileChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12$\n" +
	"\x0eis_first_chunk\x18\x02 \x01(\bR\fisFirstChunk\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12;\n" +
	"\bresponse\x18d \x01(\v2\x1f.fitSphere.workout.BaseResponseR\bresponse\"\xf8\x02\n" +
	"\x0eXExerciseInput\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\tR\n" +
	"exerciseId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12#\n" +
	"\rexercise_type\x18\x03 \x01(\tR\fexerciseType\x12!\n" +
	"\fmuscle_group\x18\x04 \x01(\tR\vmuscleGroup\x12\x1c\n" +
	"\tequipment\x18\x05 \x01(\tR\tequipment\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x06 \x01(\tR\n" +
	"difficulty\x12 \n" +
	"\vinstruction\x18\a \x01(\tR\vinstruction\x12\x14\n" +
	"\x05video\x18\b \x01(\tR\x05video\x12 \n" +
	"\vrepetitions\x18\t \x01(\tR\vrepetitions\x12\x16\n" +
	"\x06series\x18\n" +
	" \x01(\rR\x06series\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt*F\n" +
	"\n" +
	"FileFormat\x12\x1b\n" +
	"\x17FILE_FORMAT_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03CSV\x10\x01\x12\t\n" +
	"\x05EXCEL\x10\x02\x12\a\n" +
	"\x03PDF\x10\x032\xf9\f\n" +
	"\aWorkout\x12V\n" +
	"\fGetExercises\x12\".fitSphere.workout.GetExercisesReq\x1a\".fitSphere.workout.GetExercisesRes\x12Y\n" +
	"\rGetExerciseID\x12#.fitSphere.workout.GetExerciseIDReq\x1a#.fitSphere.workout.GetExerciseIDRes\x12\\\n" +
	"\x0eCreateExercise\x12$.fitSphere.workout.CreateExerciseReq\x1a$.fitSphere.workout.CreateExerciseRes\x12\\\n" +
	"\x0eUpdateExercise\x12$.fitSphere.workout.UpdateExerciseReq\x1a$.fitSphere.workout.UpdateExerciseRes\x12Q\n" +
	"\x0eDeleteExercise\x12$.fitSphere.workout.DeleteExerciseReq\x1a\x19.fitSphere.workout.NilRes\x12w\n" +
	"\x17GetWorkoutPlanExercises\x12-.fitSphere.workout.GetWorkoutPlanExercisesReq\x1a-.fitSphere.workout.GetWorkoutPlanExercisesRes\x12\x80\x01\n" +
	"\x1aGetExerciseByIdWorkoutPlan\x120.fitSphere.workout.GetExerciseByIdWorkoutPlanReq\x1a0.fitSphere.workout.GetExerciseByIdWorkoutPlanRes\x12o\n" +
	"\x1dDeleteExerciseByIdWorkoutPlan\x123.fitSphere.workout.DeleteExerciseByIdWorkoutPlanReq\x1a\x19.fitSphere.workout.NilRes\x12\x89\x01\n" +
	"\x1dUpdateExerciseByIdWorkoutPlan\x123.fitSphere.workout.UpdateExerciseByIdWorkoutPlanReq\x1a3.fitSphere.workout.UpdateExerciseByIdWorkoutPlanRes\x12g\n" +
	"\x19InsertExerciseWorkoutPlan\x12/.fitSphere.workout.InsertExerciseWorkoutPlanReq\x1a\x19.fitSphere.workout.NilRes\x12_\n" +
	"\x0fGetWorkoutPlans\x12%.fitSphere.workout.GetWorkoutPlansReq\x1a%.fitSphere.workout.GetWorkoutPlansRes\x12\\\n" +
	"\x0eGetWorkoutPlan\x12$.fitSphere.workout.GetWorkoutPlanReq\x1a$.fitSphere.workout.GetWorkoutPlanRes\x12W\n" +
	"\x11DeleteWorkoutPlan\x12'.fitSphere.workout.DeleteWorkoutPlanReq\x1a\x19.fitSphere.workout.NilRes\x12e\n" +
	"\x11UpdateWorkoutPlan\x12'.fitSphere.workout.UpdateWorkoutPlanReq\x1a'.fitSphere.workout.UpdateWorkoutPlanRes\x12e\n" +
	"\x11InsertWorkoutPlan\x12'.fitSphere.workout.InsertWorkoutPlanReq\x1a'.fitSphere.workout.InsertWorkoutPlanRes\x12d\n" +
	"\x13DownloadWorkoutPlan\x12-.fitSphere.workout.DownloadWorkoutPlanRequest\x1a\x1c.fitSphere.workout.FileChunk0\x01b\x06proto3"

var (
	file_workout_proto_rawDescOnce sync.Once
	file_workout_proto_rawDescData []byte
)

func file_workout_proto_rawDescGZIP() []byte {
	file_workout_proto_rawDescOnce.Do(func() {
		file_workout_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workout_proto_rawDesc), len(file_workout_proto_rawDesc)))
	})
	return file_workout_proto_rawDescData
}

var file_workout_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workout_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_workout_proto_goTypes = []any{
	(FileFormat)(0),                          // 0: fitSphere.workout.FileFormat
	(*GetExercisesReq)(nil),                  // 1: fitSphere.workout.GetExercisesReq
	(*GetExercisesRes)(nil),                  // 2: fitSphere.workout.GetExercisesRes
	(*GetExerciseIDReq)(nil),                 // 3: fitSphere.workout.GetExerciseIDReq
	(*GetExerciseIDRes)(nil),                 // 4: fitSphere.workout.GetExerciseIDRes
	(*CreateExerciseReq)(nil),                // 5: fitSphere.workout.CreateExerciseReq
	(*CreateExerciseRes)(nil),                // 6: fitSphere.workout.CreateExerciseRes
	(*UpdateExerciseReq)(nil),                // 7: fitSphere.workout.UpdateExerciseReq
	(*DeleteExerciseReq)(nil),                // 8: fitSphere.workout.DeleteExerciseReq
	(*GetWorkoutPlanExercisesReq)(nil),       // 9: fitSphere.workout.GetWorkoutPlanExercisesReq
	(*GetWorkoutPlanExercisesRes)(nil),       // 10: fitSphere.workout.GetWorkoutPlanExercisesRes
	(*GetExerciseByIdWorkoutPlanReq)(nil),    // 11: fitSphere.workout.GetExerciseByIdWorkoutPlanReq
	(*GetExerciseByIdWorkoutPlanRes)(nil),    // 12: fitSphere.workout.GetExerciseByIdWorkoutPlanRes
	(*DeleteExerciseByIdWorkoutPlanReq)(nil), // 13: fitSphere.workout.DeleteExerciseByIdWorkoutPlanReq
	(*UpdateExerciseByIdWorkoutPlanReq)(nil), // 14: fitSphere.workout.UpdateExerciseByIdWorkoutPlanReq
	(*UpdateExerciseByIdWorkoutPlanRes)(nil), // 15: fitSphere.workout.UpdateExerciseByIdWorkoutPlanRes
	(*InsertExerciseWorkoutPlanReq)(nil),     // 16: fitSphere.workout.InsertExerciseWorkoutPlanReq
	(*GetWorkoutPlansReq)(nil),               // 17: fitSphere.workout.GetWorkoutPlansReq
	(*GetWorkoutPlansRes)(nil),               // 18: fitSphere.workout.GetWorkoutPlansRes
	(*GetWorkoutPlanReq)(nil),                // 19: fitSphere.workout.GetWorkoutPlanReq
	(*GetWorkoutPlanRes)(nil),                // 20: fitSphere.workout.GetWorkoutPlanRes
	(*InsertWorkoutPlanRes)(nil),             // 21: fitSphere.workout.InsertWorkoutPlanRes
	(*UpdateExerciseRes)(nil),                // 22: fitSphere.workout.UpdateExerciseRes
	(*UpdateWorkoutPlanReq)(nil),             // 23: fitSphere.workout.UpdateWorkoutPlanReq
	(*UpdateWorkoutPlanRes)(nil),             // 24: fitSphere.workout.UpdateWorkoutPlanRes
	(*DeleteWorkoutPlanReq)(nil),             // 25: fitSphere.workout.DeleteWorkoutPlanReq
	(*NilRes)(nil),                           // 26: fitSphere.workout.NilRes
	(*XDiff)(nil),                            // 27: fitSphere.workout.XDiff
	(*XWorkoutPlan)(nil),                     // 28: fitSphere.workout.XWorkoutPlan
	(*XWorkoutPlanDay)(nil),                  // 29: fitSphere.workout.XWorkoutPlanDay
	(*XExercises)(nil),                       // 30: fitSphere.workout.XExercises
	(*XWorkoutExerciseDay)(nil),              // 31: fitSphere.workout.XWorkoutExerciseDay
	(*XWorkoutPlanResponse)(nil),             // 32: fitSphere.workout.XWorkoutPlanResponse
	(*BaseRequest)(nil),                      // 33: fitSphere.workout.BaseRequest
	(*InsertWorkoutPlanReq)(nil),             // 34: fitSphere.workout.InsertWorkoutPlanReq
	(*BaseResponse)(nil),                     // 35: fitSphere.workout.BaseResponse
	(*WorkoutDayResponse)(nil),               // 36: fitSphere.workout.WorkoutDayResponse
	(*XPlanDay)(nil),                         // 37: fitSphere.workout.XPlanDay
	(*XWorkoutDay)(nil),                      // 38: fitSphere.workout.XWorkoutDay
	(*XWorkoutPlanDetail)(nil),               // 39: fitSphere.workout.XWorkoutPlanDetail
	(*DownloadWorkoutPlanRequest)(nil),       // 40: fitSphere.workout.DownloadWorkoutPlanRequest
	(*FileChunk)(nil),                        // 41: fitSphere.workout.FileChunk
	(*XExerciseInput)(nil),                   // 42: fitSphere.workout.XExerciseInput
	(*timestamppb.Timestamp)(nil),            // 43: google.protobuf.Timestamp
}
var file_workout_proto_depIdxs = []int32{
	33, // 0: fitSphere.workout.GetExercisesReq.request:type_name -> fitSphere.workout.BaseRequest
	30, // 1: fitSphere.workout.GetExercisesRes.exercise:type_name -> fitSphere.workout.XExercises
	35, // 2: fitSphere.workout.GetExercisesRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 3: fitSphere.workout.GetExerciseIDReq.request:type_name -> fitSphere.workout.BaseRequest
	30, // 4: fitSphere.workout.GetExerciseIDRes.exercise:type_name -> fitSphere.workout.XExercises
	35, // 5: fitSphere.workout.GetExerciseIDRes.response:type_name -> fitSphere.workout.BaseResponse
	30, // 6: fitSphere.workout.CreateExerciseReq.exercise:type_name -> fitSphere.workout.XExercises
	33, // 7: fitSphere.workout.CreateExerciseReq.request:type_name -> fitSphere.workout.BaseRequest
	30, // 8: fitSphere.workout.CreateExerciseRes.exercise:type_name -> fitSphere.workout.XExercises
	35, // 9: fitSphere.workout.CreateExerciseRes.response:type_name -> fitSphere.workout.BaseResponse
	27, // 10: fitSphere.workout.UpdateExerciseReq.updates:type_name -> fitSphere.workout.XDiff
	35, // 11: fitSphere.workout.UpdateExerciseReq.response:type_name -> fitSphere.workout.BaseResponse
	33, // 12: fitSphere.workout.DeleteExerciseReq.request:type_name -> fitSphere.workout.BaseRequest
	33, // 13: fitSphere.workout.GetWorkoutPlanExercisesReq.request:type_name -> fitSphere.workout.BaseRequest
	31, // 14: fitSphere.workout.GetWorkoutPlanExercisesRes.workout_exercise_day:type_name -> fitSphere.workout.XWorkoutExerciseDay
	35, // 15: fitSphere.workout.GetWorkoutPlanExercisesRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 16: fitSphere.workout.GetExerciseByIdWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	31, // 17: fitSphere.workout.GetExerciseByIdWorkoutPlanRes.workout_exercise_day:type_name -> fitSphere.workout.XWorkoutExerciseDay
	35, // 18: fitSphere.workout.GetExerciseByIdWorkoutPlanRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 19: fitSphere.workout.DeleteExerciseByIdWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	27, // 20: fitSphere.workout.UpdateExerciseByIdWorkoutPlanReq.updates:type_name -> fitSphere.workout.XDiff
	33, // 21: fitSphere.workout.UpdateExerciseByIdWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	31, // 22: fitSphere.workout.UpdateExerciseByIdWorkoutPlanRes.workout_exercise_day:type_name -> fitSphere.workout.XWorkoutExerciseDay
	35, // 23: fitSphere.workout.UpdateExerciseByIdWorkoutPlanRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 24: fitSphere.workout.InsertExerciseWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	33, // 25: fitSphere.workout.GetWorkoutPlansReq.request:type_name -> fitSphere.workout.BaseRequest
	32, // 26: fitSphere.workout.GetWorkoutPlansRes.workout_plan:type_name -> fitSphere.workout.XWorkoutPlanResponse
	35, // 27: fitSphere.workout.GetWorkoutPlansRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 28: fitSphere.workout.GetWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	32, // 29: fitSphere.workout.GetWorkoutPlanRes.workout_plan:type_name -> fitSphere.workout.XWorkoutPlanResponse
	35, // 30: fitSphere.workout.GetWorkoutPlanRes.response:type_name -> fitSphere.workout.BaseResponse
	28, // 31: fitSphere.workout.InsertWorkoutPlanRes.workout:type_name -> fitSphere.workout.XWorkoutPlan
	35, // 32: fitSphere.workout.InsertWorkoutPlanRes.response:type_name -> fitSphere.workout.BaseResponse
	30, // 33: fitSphere.workout.UpdateExerciseRes.exercise:type_name -> fitSphere.workout.XExercises
	35, // 34: fitSphere.workout.UpdateExerciseRes.response:type_name -> fitSphere.workout.BaseResponse
	27, // 35: fitSphere.workout.UpdateWorkoutPlanReq.updates:type_name -> fitSphere.workout.XDiff
	33, // 36: fitSphere.workout.UpdateWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	28, // 37: fitSphere.workout.UpdateWorkoutPlanRes.workout:type_name -> fitSphere.workout.XWorkoutPlan
	35, // 38: fitSphere.workout.UpdateWorkoutPlanRes.response:type_name -> fitSphere.workout.BaseResponse
	33, // 39: fitSphere.workout.DeleteWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	43, // 40: fitSphere.workout.XWorkoutPlan.created_at:type_name -> google.protobuf.Timestamp
	43, // 41: fitSphere.workout.XWorkoutPlan.updated_at:type_name -> google.protobuf.Timestamp
	29, // 42: fitSphere.workout.XWorkoutPlan.workout_plan_day:type_name -> fitSphere.workout.XWorkoutPlanDay
	30, // 43: fitSphere.workout.XWorkoutPlanDay.exercises:type_name -> fitSphere.workout.XExercises
	43, // 44: fitSphere.workout.XExercises.created_at:type_name -> google.protobuf.Timestamp
	43, // 45: fitSphere.workout.XExercises.updated_at:type_name -> google.protobuf.Timestamp
	43, // 46: fitSphere.workout.XWorkoutExerciseDay.created_at:type_name -> google.protobuf.Timestamp
	43, // 47: fitSphere.workout.XWorkoutExerciseDay.updated_at:type_name -> google.protobuf.Timestamp
	36, // 48: fitSphere.workout.XWorkoutPlanResponse.workout_day:type_name -> fitSphere.workout.WorkoutDayResponse
	43, // 49: fitSphere.workout.XWorkoutPlanResponse.created_at:type_name -> google.protobuf.Timestamp
	43, // 50: fitSphere.workout.XWorkoutPlanResponse.updated_at:type_name -> google.protobuf.Timestamp
	28, // 51: fitSphere.workout.InsertWorkoutPlanReq.workout:type_name -> fitSphere.workout.XWorkoutPlan
	33, // 52: fitSphere.workout.InsertWorkoutPlanReq.request:type_name -> fitSphere.workout.BaseRequest
	30, // 53: fitSphere.workout.WorkoutDayResponse.exercises:type_name -> fitSphere.workout.XExercises
	42, // 54: fitSphere.workout.XPlanDay.exercises:type_name -> fitSphere.workout.XExerciseInput
	43, // 55: fitSphere.workout.XWorkoutDay.created_at:type_name -> google.protobuf.Timestamp
	43, // 56: fitSphere.workout.XWorkoutDay.updated_at:type_name -> google.protobuf.Timestamp
	30, // 57: fitSphere.workout.XWorkoutDay.exercises:type_name -> fitSphere.workout.XExercises
	43, // 58: fitSphere.workout.XWorkoutPlanDetail.created_at:type_name -> google.protobuf.Timestamp
	0,  // 59: fitSphere.workout.DownloadWorkoutPlanRequest.format:type_name -> fitSphere.workout.FileFormat
	33, // 60: fitSphere.workout.DownloadWorkoutPlanRequest.request:type_name -> fitSphere.workout.BaseRequest
	35, // 61: fitSphere.workout.FileChunk.response:type_name -> fitSphere.workout.BaseResponse
	43, // 62: fitSphere.workout.XExerciseInput.created_at:type_name -> google.protobuf.Timestamp
	1,  // 63: fitSphere.workout.Workout.GetExercises:input_type -> fitSphere.workout.GetExercisesReq
	3,  // 64: fitSphere.workout.Workout.GetExerciseID:input_type -> fitSphere.workout.GetExerciseIDReq
	5,  // 65: fitSphere.workout.Workout.CreateExercise:input_type -> fitSphere.workout.CreateExerciseReq
	7,  // 66: fitSphere.workout.Workout.UpdateExercise:input_type -> fitSphere.workout.UpdateExerciseReq
	8,  // 67: fitSphere.workout.Workout.DeleteExercise:input_type -> fitSphere.workout.DeleteExerciseReq
	9,  // 68: fitSphere.workout.Workout.GetWorkoutPlanExercises:input_type -> fitSphere.workout.GetWorkoutPlanExercisesReq
	11, // 69: fitSphere.workout.Workout.GetExerciseByIdWorkoutPlan:input_type -> fitSphere.workout.GetExerciseByIdWorkoutPlanReq
	13, // 70: fitSphere.workout.Workout.DeleteExerciseByIdWorkoutPlan:input_type -> fitSphere.workout.DeleteExerciseByIdWorkoutPlanReq
	14, // 71: fitSphere.workout.Workout.UpdateExerciseByIdWorkoutPlan:input_type -> fitSphere.workout.UpdateExerciseByIdWorkoutPlanReq
	16, // 72: fitSphere.workout.Workout.InsertExerciseWorkoutPlan:input_type -> fitSphere.workout.InsertExerciseWorkoutPlanReq
	17, // 73: fitSphere.workout.Workout.GetWorkoutPlans:input_type -> fitSphere.workout.GetWorkoutPlansReq
	19, // 74: fitSphere.workout.Workout.GetWorkoutPlan:input_type -> fitSphere.workout.GetWorkoutPlanReq
	25, // 75: fitSphere.workout.Workout.DeleteWorkoutPlan:input_type -> fitSphere.workout.DeleteWorkoutPlanReq
	23, // 76: fitSphere.workout.Workout.UpdateWorkoutPlan:input_type -> fitSphere.workout.UpdateWorkoutPlanReq
	34, // 77: fitSphere.workout.Workout.InsertWorkoutPlan:input_type -> fitSphere.workout.InsertWorkoutPlanReq
	40, // 78: fitSphere.workout.Workout.DownloadWorkoutPlan:input_type -> fitSphere.workout.DownloadWorkoutPlanRequest
	2,  // 79: fitSphere.workout.Workout.GetExercises:output_type -> fitSphere.workout.GetExercisesRes
	4,  // 80: fitSphere.workout.Workout.GetExerciseID:output_type -> fitSphere.workout.GetExerciseIDRes
	6,  // 81: fitSphere.workout.Workout.CreateExercise:output_type -> fitSphere.workout.CreateExerciseRes
	22, // 82: fitSphere.workout.Workout.UpdateExercise:output_type -> fitSphere.workout.UpdateExerciseRes
	26, // 83: fitSphere.workout.Workout.DeleteExercise:output_type -> fitSphere.workout.NilRes
	10, // 84: fitSphere.workout.Workout.GetWorkoutPlanExercises:output_type -> fitSphere.workout.GetWorkoutPlanExercisesRes
	12, // 85: fitSphere.workout.Workout.GetExerciseByIdWorkoutPlan:output_type -> fitSphere.workout.GetExerciseByIdWorkoutPlanRes
	26, // 86: fitSphere.workout.Workout.DeleteExerciseByIdWorkoutPlan:output_type -> fitSphere.workout.NilRes
	15, // 87: fitSphere.workout.Workout.UpdateExerciseByIdWorkoutPlan:output_type -> fitSphere.workout.UpdateExerciseByIdWorkoutPlanRes
	26, // 88: fitSphere.workout.Workout.InsertExerciseWorkoutPlan:output_type -> fitSphere.workout.NilRes
	18, // 89: fitSphere.workout.Workout.GetWorkoutPlans:output_type -> fitSphere.workout.GetWorkoutPlansRes
	20, // 90: fitSphere.workout.Workout.GetWorkoutPlan:output_type -> fitSphere.workout.GetWorkoutPlanRes
	26, // 91: fitSphere.workout.Workout.DeleteWorkoutPlan:output_type -> fitSphere.workout.NilRes
	24, // 92: fitSphere.workout.Workout.UpdateWorkoutPlan:output_type -> fitSphere.workout.UpdateWorkoutPlanRes
	21, // 93: fitSphere.workout.Workout.InsertWorkoutPlan:output_type -> fitSphere.workout.InsertWorkoutPlanRes
	41, // 94: fitSphere.workout.Workout.DownloadWorkoutPlan:output_type -> fitSphere.workout.FileChunk
	79, // [79:95] is the sub-list for method output_type
	63, // [63:79] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_workout_proto_init() }
func file_workout_proto_init() {
	if File_workout_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workout_proto_rawDesc), len(file_workout_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workout_proto_goTypes,
		DependencyIndexes: file_workout_proto_depIdxs,
		EnumInfos:         file_workout_proto_enumTypes,
		MessageInfos:      file_workout_proto_msgTypes,
	}.Build()
	File_workout_proto = out.File
	file_workout_proto_goTypes = nil
	file_workout_proto_depIdxs = nil
}
