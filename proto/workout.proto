syntax = "proto3";

package fitSphere.workout;

import "google/protobuf/timestamp.proto";

service Workout {
  // exercises
  rpc GetExercises(GetExercisesReq) returns (GetExercisesRes);
  rpc GetExerciseID(GetExerciseIDReq) returns (GetExerciseIDRes);
  rpc CreateExercise(CreateExerciseReq) returns (CreateExerciseRes);
  rpc UpdateExercise(UpdateExerciseReq) returns (UpdateExerciseRes);
  rpc DeleteExercise(DeleteExerciseReq) returns (NilRes);
  // workout exercises
  rpc GetWorkoutPlanExercises(GetWorkoutPlanExercisesReq) returns (GetWorkoutPlanExercisesRes);
  rpc GetExerciseByIdWorkoutPlan(GetExerciseByIdWorkoutPlanReq) returns (GetExerciseByIdWorkoutPlanRes);
  rpc DeleteExerciseByIdWorkoutPlan(DeleteExerciseByIdWorkoutPlanReq) returns (NilRes);
  rpc UpdateExerciseByIdWorkoutPlan(UpdateExerciseByIdWorkoutPlanReq) returns (UpdateExerciseByIdWorkoutPlanRes);
  rpc InsertExerciseWorkoutPlan(InsertExerciseWorkoutPlanReq) returns (NilRes);

  // workouts
  rpc GetWorkoutPlans(GetWorkoutPlansReq) returns (GetWorkoutPlansRes);
  rpc GetWorkoutPlan(GetWorkoutPlanReq) returns (GetWorkoutPlanRes);
  rpc DeleteWorkoutPlan(DeleteWorkoutPlanReq) returns (NilRes);
  rpc UpdateWorkoutPlan(UpdateWorkoutPlanReq) returns (UpdateWorkoutPlanRes);
  rpc InsertWorkoutPlan(InsertWorkoutPlanReq) returns (InsertWorkoutPlanRes);

  rpc DownloadWorkoutPlan(DownloadWorkoutPlanRequest) returns (stream FileChunk);

}

// TODO change objectives in exercises (objective to get to 5 reps, get or fail, change scheme)

// TODO Implement reminders here
//service WorkoutReminder {
//  rpc CreateReminder(CreateReminderReq) returns (CreateReminderRes);
//  rpc GetReminders(GetRemindersReq) returns (GetRemindersRes);
//  rpc UpdateReminder(UpdateReminderReq) returns (UpdateReminderRes);
//  rpc DeleteReminder(DeleteReminderReq) returns (NilRes)
//}

// TODO Sync meal plans with user workout routines for better calorie and macro balance.
//service WorkoutSyncService {
//  rpc SyncWorkoutPlan(SyncWorkoutPlanReq) returns(SyncWorkoutPlanRes);
//  rpc GetWorkoutIntegration(GetWorkoutIntegrationReq) returns (GetWorkoutIntegrationRes);
//}

message GetExercisesReq {
  BaseRequest request = 100;
}

message GetExercisesRes{
  bool success = 1;
  string message = 2;
  repeated XExercises exercise = 3;
  BaseResponse response = 100;
}

message GetExerciseIDReq {
  string exercise_id = 1;
  BaseRequest request = 100;
}

message GetExerciseIDRes {
  bool success = 1;
  string message = 2;
  XExercises exercise = 3;
  BaseResponse response = 100;
}

message CreateExerciseReq {
  XExercises exercise = 1;
  string user_id = 2;
  BaseRequest request = 100;
}

message CreateExerciseRes {
  bool success = 1;
  string message = 2;
  XExercises exercise = 3;
  BaseResponse response = 100;
}

message UpdateExerciseReq {
  string exercise_id = 1;
  repeated XDiff updates  = 2;
  BaseResponse response = 100;
}

message DeleteExerciseReq {
  string exercise_id = 1;
  BaseRequest request = 100;
}

message GetWorkoutPlanExercisesReq {
  BaseRequest request = 100;
}

message GetWorkoutPlanExercisesRes {
  bool success = 1;
  string message = 2;
  repeated XWorkoutExerciseDay workout_exercise_day = 3;
  BaseResponse response = 100;
}

message GetExerciseByIdWorkoutPlanReq {
  string exercise_workout_plan  = 1;
  BaseRequest request = 100;
}

message GetExerciseByIdWorkoutPlanRes {
  bool success = 1;
  string message = 2;
  XWorkoutExerciseDay workout_exercise_day = 3;
  BaseResponse response = 100;
}

message DeleteExerciseByIdWorkoutPlanReq {
  repeated string exercise_id  = 1;
  string workout_plan_id = 2;
  string day = 3;
  bool    hard_delete   = 4;
  BaseRequest request = 100;
}

message UpdateExerciseByIdWorkoutPlanReq {
  string workout_plan_id      = 1;

  repeated XDiff updates  = 2;

  BaseRequest request = 100;

}

message UpdateExerciseByIdWorkoutPlanRes {
  bool      success     = 1;
  string    message     = 2;

  XWorkoutExerciseDay workout_exercise_day = 3;
  BaseResponse response = 100;
}

message InsertExerciseWorkoutPlanReq {
  string workout_day = 1;
  string workout_plan_id = 2;
  string exercise_id = 3;
  BaseRequest request = 100;
}


message GetWorkoutPlansReq {
  BaseRequest request = 100;
}

message GetWorkoutPlansRes {
  bool success = 1;
  string message = 2;

  repeated XWorkoutPlanResponse workout_plan = 3;
  BaseResponse response = 100;
}

message GetWorkoutPlanReq{
  string workout_plan_id = 1;
  BaseRequest request = 100;
}

message GetWorkoutPlanRes {
  bool success = 1;
  string message = 2;

  XWorkoutPlanResponse workout_plan = 3;
  BaseResponse response = 100;
}



message InsertWorkoutPlanRes {
  bool success = 1;
  string message = 2;
  XWorkoutPlan workout = 3;
  BaseResponse response = 100;
}


message UpdateExerciseRes {
  bool success = 1;
  string message = 2;
  XExercises exercise = 3;
  BaseResponse response = 100;
}


message UpdateWorkoutPlanReq {
  string workout_id      = 1;

  repeated XDiff updates  = 2;

  BaseRequest request = 100;
}

message UpdateWorkoutPlanRes {
  bool      success     = 1;
  string    message     = 2;

  XWorkoutPlan workout    = 3;

  BaseResponse response = 100;
}

message DeleteWorkoutPlanReq {
  string  user_id   = 1;
  string workout_plan_id = 2;
  bool    hard_delete   = 3; // soft delete by default or change later

  BaseRequest request = 100;
}

message NilRes {
}

message XDiff {
  string field      = 1;
  string old_value  = 2;
  string new_value  = 3;
}

message XWorkoutPlan {
  string workout_id = 1;
  string user_id = 2;
  string description = 3;
  string notes = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  uint32 rating = 7;
  repeated XWorkoutPlanDay workout_plan_day = 8;
}

message XWorkoutPlanDay {
  string day = 1;
  repeated XExercises exercises = 2;
}

message XExercises {
  string exercise_id = 1;
  string name = 2;
  string exercise_type = 3;
  string muscle_group = 4;
  string equipment = 5;
  string difficulty = 6;
  string instruction = 7;
  string video = 8;
  bool custom_created = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message XWorkoutExerciseDay {
  string workout_exercise_day = 1;
  string name = 2;
  string exercise_type = 3;
  string muscle_group = 4;
  string equipment = 5;
  string difficulty = 6;
  string instruction = 7;
  string video = 8;
  bool custom_created = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  string day = 12;
}

message XWorkoutPlanResponse {
  string workout_plan_id = 1;
  string user_id = 2;
  string description = 3;
  repeated WorkoutDayResponse workout_day = 4;
  string notes = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  uint32 rating = 8;
  string day = 9;
  repeated string exercises = 10;
}

message BaseRequest {
  string downstream = 998;
  string request_id = 999;
}
message InsertWorkoutPlanReq {
  XWorkoutPlan workout = 1;
  repeated XPlanDay plan_day = 2;
  BaseRequest request = 3;
}
message BaseResponse {
  string upstream = 998;
  string request_id = 999;
  string status = 1000;
}

message WorkoutDayResponse {
  string day = 1;
  repeated string exercises = 2;
}

message XPlanDay {
  string day = 1;
  repeated string exercise_id = 2;
}

message XWorkoutDay {
  string workout_day_id = 1;
  string workout_plan_id = 2;
  string day = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  repeated XExercises exercises = 6;
}

message XWorkoutPlanDetail {
  string workout_plan_detail_id = 1;
  string workout_plan_id = 2;
  string day = 3;
  repeated string exercises = 4;
  google.protobuf.Timestamp created_at = 5;
}

enum FileFormat {
  FILE_FORMAT_UNSPECIFIED = 0;
  CSV = 1;
  EXCEL = 2;
  PDF = 3;
}

message DownloadWorkoutPlanRequest {
  string workout_plan_id = 1;
  FileFormat format = 2;
}

message FileChunk {
  // The raw bytes of this file chunk.
  bytes content = 1;

  // True only in the first chunk.
  bool is_first_chunk = 2;

  // Optional metadata available only on the first chunk.
  string file_name = 3;
  string content_type = 4;
  // "text/csv"
  // "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
  // "application/pdf"
}

